// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package campaign

import (
	"context"
	"fmt"
	"github.com/apache/thrift/lib/go/thrift"
	"orbia_api/biz/model/common"
)

// Campaign附件信息
type CampaignAttachment struct {
	ID        int64  `thrift:"id,1" form:"id" json:"id" query:"id"`
	FileURL   string `thrift:"file_url,2" form:"file_url" json:"file_url" query:"file_url"`
	FileName  string `thrift:"file_name,3" form:"file_name" json:"file_name" query:"file_name"`
	FileType  string `thrift:"file_type,4" form:"file_type" json:"file_type" query:"file_type"`
	FileSize  int64  `thrift:"file_size,5" form:"file_size" json:"file_size" query:"file_size"`
	CreatedAt string `thrift:"created_at,6" form:"created_at" json:"created_at" query:"created_at"`
}

func NewCampaignAttachment() *CampaignAttachment {
	return &CampaignAttachment{}
}

func (p *CampaignAttachment) InitDefault() {
}

func (p *CampaignAttachment) GetID() (v int64) {
	return p.ID
}

func (p *CampaignAttachment) GetFileURL() (v string) {
	return p.FileURL
}

func (p *CampaignAttachment) GetFileName() (v string) {
	return p.FileName
}

func (p *CampaignAttachment) GetFileType() (v string) {
	return p.FileType
}

func (p *CampaignAttachment) GetFileSize() (v int64) {
	return p.FileSize
}

func (p *CampaignAttachment) GetCreatedAt() (v string) {
	return p.CreatedAt
}

var fieldIDToName_CampaignAttachment = map[int16]string{
	1: "id",
	2: "file_url",
	3: "file_name",
	4: "file_type",
	5: "file_size",
	6: "created_at",
}

func (p *CampaignAttachment) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 4:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 5:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 6:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField6(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignAttachment[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignAttachment) ReadField1(iprot thrift.TProtocol) error {

	var _field int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = v
	}
	p.ID = _field
	return nil
}
func (p *CampaignAttachment) ReadField2(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.FileURL = _field
	return nil
}
func (p *CampaignAttachment) ReadField3(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.FileName = _field
	return nil
}
func (p *CampaignAttachment) ReadField4(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.FileType = _field
	return nil
}
func (p *CampaignAttachment) ReadField5(iprot thrift.TProtocol) error {

	var _field int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = v
	}
	p.FileSize = _field
	return nil
}
func (p *CampaignAttachment) ReadField6(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CreatedAt = _field
	return nil
}

func (p *CampaignAttachment) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("CampaignAttachment"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField6(oprot); err != nil {
			fieldId = 6
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignAttachment) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("id", thrift.I64, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI64(p.ID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignAttachment) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("file_url", thrift.STRING, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.FileURL); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *CampaignAttachment) writeField3(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("file_name", thrift.STRING, 3); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.FileName); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *CampaignAttachment) writeField4(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("file_type", thrift.STRING, 4); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.FileType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *CampaignAttachment) writeField5(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("file_size", thrift.I64, 5); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI64(p.FileSize); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *CampaignAttachment) writeField6(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("created_at", thrift.STRING, 6); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CreatedAt); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 end error: ", p), err)
}

func (p *CampaignAttachment) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignAttachment(%+v)", *p)

}

// Campaign详细信息
type CampaignInfo struct {
	ID           int64  `thrift:"id,1" form:"id" json:"id" query:"id"`
	CampaignID   string `thrift:"campaign_id,2" form:"campaign_id" json:"campaign_id" query:"campaign_id"`
	UserID       int64  `thrift:"user_id,3" form:"user_id" json:"user_id" query:"user_id"`
	TeamID       int64  `thrift:"team_id,4" form:"team_id" json:"team_id" query:"team_id"`
	CampaignName string `thrift:"campaign_name,5" form:"campaign_name" json:"campaign_name" query:"campaign_name"`
	// awareness, consideration, conversion
	PromotionObjective string `thrift:"promotion_objective,6" form:"promotion_objective" json:"promotion_objective" query:"promotion_objective"`
	OptimizationGoal   string `thrift:"optimization_goal,7" form:"optimization_goal" json:"optimization_goal" query:"optimization_goal"`
	// JSON数组的数据字典ID列表
	Location []int64 `thrift:"location,8,optional,list<i64>" form:"location" json:"location,omitempty" query:"location"`
	// 引用数据字典ID
	Age *int64 `thrift:"age,9,optional" form:"age" json:"age,omitempty" query:"age"`
	// 引用数据字典ID
	Gender *int64 `thrift:"gender,10,optional" form:"gender" json:"gender,omitempty" query:"gender"`
	// JSON数组的数据字典ID列表
	Languages []int64 `thrift:"languages,11,optional,list<i64>" form:"languages" json:"languages,omitempty" query:"languages"`
	// 引用数据字典ID
	SpendingPower *int64 `thrift:"spending_power,12,optional" form:"spending_power" json:"spending_power,omitempty" query:"spending_power"`
	// 引用数据字典ID
	OperatingSystem *int64 `thrift:"operating_system,13,optional" form:"operating_system" json:"operating_system,omitempty" query:"operating_system"`
	// JSON数组的数据字典ID列表
	OsVersions []int64 `thrift:"os_versions,14,optional,list<i64>" form:"os_versions" json:"os_versions,omitempty" query:"os_versions"`
	// JSON数组的数据字典ID列表
	DeviceModels []int64 `thrift:"device_models,15,optional,list<i64>" form:"device_models" json:"device_models,omitempty" query:"device_models"`
	// 引用数据字典ID
	ConnectionType *int64 `thrift:"connection_type,16,optional" form:"connection_type" json:"connection_type,omitempty" query:"connection_type"`
	// 0-any, 1-specific range
	DevicePriceType  int32    `thrift:"device_price_type,17" form:"device_price_type" json:"device_price_type" query:"device_price_type"`
	DevicePriceMin   *float64 `thrift:"device_price_min,18,optional" form:"device_price_min" json:"device_price_min,omitempty" query:"device_price_min"`
	DevicePriceMax   *float64 `thrift:"device_price_max,19,optional" form:"device_price_max" json:"device_price_max,omitempty" query:"device_price_max"`
	PlannedStartTime string   `thrift:"planned_start_time,20" form:"planned_start_time" json:"planned_start_time" query:"planned_start_time"`
	PlannedEndTime   string   `thrift:"planned_end_time,21" form:"planned_end_time" json:"planned_end_time" query:"planned_end_time"`
	// 引用数据字典ID
	TimeZone *int64 `thrift:"time_zone,22,optional" form:"time_zone" json:"time_zone,omitempty" query:"time_zone"`
	// 0-全天, 1-特定时段
	DaypartingType int32 `thrift:"dayparting_type,23" form:"dayparting_type" json:"dayparting_type" query:"dayparting_type"`
	// JSON格式
	DaypartingSchedule *string `thrift:"dayparting_schedule,24,optional" form:"dayparting_schedule" json:"dayparting_schedule,omitempty" query:"dayparting_schedule"`
	// 0-每七天不超过三次, 1-每天不超过一次, 2-自定义
	FrequencyCapType  int32  `thrift:"frequency_cap_type,25" form:"frequency_cap_type" json:"frequency_cap_type" query:"frequency_cap_type"`
	FrequencyCapTimes *int32 `thrift:"frequency_cap_times,26,optional" form:"frequency_cap_times" json:"frequency_cap_times,omitempty" query:"frequency_cap_times"`
	FrequencyCapDays  *int32 `thrift:"frequency_cap_days,27,optional" form:"frequency_cap_days" json:"frequency_cap_days,omitempty" query:"frequency_cap_days"`
	// 0-每日预算, 1-总预算
	BudgetType         int32   `thrift:"budget_type,28" form:"budget_type" json:"budget_type" query:"budget_type"`
	BudgetAmount       float64 `thrift:"budget_amount,29" form:"budget_amount" json:"budget_amount" query:"budget_amount"`
	Website            *string `thrift:"website,30,optional" form:"website" json:"website,omitempty" query:"website"`
	IosDownloadURL     *string `thrift:"ios_download_url,31,optional" form:"ios_download_url" json:"ios_download_url,omitempty" query:"ios_download_url"`
	AndroidDownloadURL *string `thrift:"android_download_url,32,optional" form:"android_download_url" json:"android_download_url,omitempty" query:"android_download_url"`
	// pending, active, paused, ended
	Status      string                `thrift:"status,33" form:"status" json:"status" query:"status"`
	Attachments []*CampaignAttachment `thrift:"attachments,34,default,list<CampaignAttachment>" form:"attachments" json:"attachments" query:"attachments"`
	CreatedAt   string                `thrift:"created_at,35" form:"created_at" json:"created_at" query:"created_at"`
	UpdatedAt   string                `thrift:"updated_at,36" form:"updated_at" json:"updated_at" query:"updated_at"`
}

func NewCampaignInfo() *CampaignInfo {
	return &CampaignInfo{}
}

func (p *CampaignInfo) InitDefault() {
}

func (p *CampaignInfo) GetID() (v int64) {
	return p.ID
}

func (p *CampaignInfo) GetCampaignID() (v string) {
	return p.CampaignID
}

func (p *CampaignInfo) GetUserID() (v int64) {
	return p.UserID
}

func (p *CampaignInfo) GetTeamID() (v int64) {
	return p.TeamID
}

func (p *CampaignInfo) GetCampaignName() (v string) {
	return p.CampaignName
}

func (p *CampaignInfo) GetPromotionObjective() (v string) {
	return p.PromotionObjective
}

func (p *CampaignInfo) GetOptimizationGoal() (v string) {
	return p.OptimizationGoal
}

var CampaignInfo_Location_DEFAULT []int64

func (p *CampaignInfo) GetLocation() (v []int64) {
	if !p.IsSetLocation() {
		return CampaignInfo_Location_DEFAULT
	}
	return p.Location
}

var CampaignInfo_Age_DEFAULT int64

func (p *CampaignInfo) GetAge() (v int64) {
	if !p.IsSetAge() {
		return CampaignInfo_Age_DEFAULT
	}
	return *p.Age
}

var CampaignInfo_Gender_DEFAULT int64

func (p *CampaignInfo) GetGender() (v int64) {
	if !p.IsSetGender() {
		return CampaignInfo_Gender_DEFAULT
	}
	return *p.Gender
}

var CampaignInfo_Languages_DEFAULT []int64

func (p *CampaignInfo) GetLanguages() (v []int64) {
	if !p.IsSetLanguages() {
		return CampaignInfo_Languages_DEFAULT
	}
	return p.Languages
}

var CampaignInfo_SpendingPower_DEFAULT int64

func (p *CampaignInfo) GetSpendingPower() (v int64) {
	if !p.IsSetSpendingPower() {
		return CampaignInfo_SpendingPower_DEFAULT
	}
	return *p.SpendingPower
}

var CampaignInfo_OperatingSystem_DEFAULT int64

func (p *CampaignInfo) GetOperatingSystem() (v int64) {
	if !p.IsSetOperatingSystem() {
		return CampaignInfo_OperatingSystem_DEFAULT
	}
	return *p.OperatingSystem
}

var CampaignInfo_OsVersions_DEFAULT []int64

func (p *CampaignInfo) GetOsVersions() (v []int64) {
	if !p.IsSetOsVersions() {
		return CampaignInfo_OsVersions_DEFAULT
	}
	return p.OsVersions
}

var CampaignInfo_DeviceModels_DEFAULT []int64

func (p *CampaignInfo) GetDeviceModels() (v []int64) {
	if !p.IsSetDeviceModels() {
		return CampaignInfo_DeviceModels_DEFAULT
	}
	return p.DeviceModels
}

var CampaignInfo_ConnectionType_DEFAULT int64

func (p *CampaignInfo) GetConnectionType() (v int64) {
	if !p.IsSetConnectionType() {
		return CampaignInfo_ConnectionType_DEFAULT
	}
	return *p.ConnectionType
}

func (p *CampaignInfo) GetDevicePriceType() (v int32) {
	return p.DevicePriceType
}

var CampaignInfo_DevicePriceMin_DEFAULT float64

func (p *CampaignInfo) GetDevicePriceMin() (v float64) {
	if !p.IsSetDevicePriceMin() {
		return CampaignInfo_DevicePriceMin_DEFAULT
	}
	return *p.DevicePriceMin
}

var CampaignInfo_DevicePriceMax_DEFAULT float64

func (p *CampaignInfo) GetDevicePriceMax() (v float64) {
	if !p.IsSetDevicePriceMax() {
		return CampaignInfo_DevicePriceMax_DEFAULT
	}
	return *p.DevicePriceMax
}

func (p *CampaignInfo) GetPlannedStartTime() (v string) {
	return p.PlannedStartTime
}

func (p *CampaignInfo) GetPlannedEndTime() (v string) {
	return p.PlannedEndTime
}

var CampaignInfo_TimeZone_DEFAULT int64

func (p *CampaignInfo) GetTimeZone() (v int64) {
	if !p.IsSetTimeZone() {
		return CampaignInfo_TimeZone_DEFAULT
	}
	return *p.TimeZone
}

func (p *CampaignInfo) GetDaypartingType() (v int32) {
	return p.DaypartingType
}

var CampaignInfo_DaypartingSchedule_DEFAULT string

func (p *CampaignInfo) GetDaypartingSchedule() (v string) {
	if !p.IsSetDaypartingSchedule() {
		return CampaignInfo_DaypartingSchedule_DEFAULT
	}
	return *p.DaypartingSchedule
}

func (p *CampaignInfo) GetFrequencyCapType() (v int32) {
	return p.FrequencyCapType
}

var CampaignInfo_FrequencyCapTimes_DEFAULT int32

func (p *CampaignInfo) GetFrequencyCapTimes() (v int32) {
	if !p.IsSetFrequencyCapTimes() {
		return CampaignInfo_FrequencyCapTimes_DEFAULT
	}
	return *p.FrequencyCapTimes
}

var CampaignInfo_FrequencyCapDays_DEFAULT int32

func (p *CampaignInfo) GetFrequencyCapDays() (v int32) {
	if !p.IsSetFrequencyCapDays() {
		return CampaignInfo_FrequencyCapDays_DEFAULT
	}
	return *p.FrequencyCapDays
}

func (p *CampaignInfo) GetBudgetType() (v int32) {
	return p.BudgetType
}

func (p *CampaignInfo) GetBudgetAmount() (v float64) {
	return p.BudgetAmount
}

var CampaignInfo_Website_DEFAULT string

func (p *CampaignInfo) GetWebsite() (v string) {
	if !p.IsSetWebsite() {
		return CampaignInfo_Website_DEFAULT
	}
	return *p.Website
}

var CampaignInfo_IosDownloadURL_DEFAULT string

func (p *CampaignInfo) GetIosDownloadURL() (v string) {
	if !p.IsSetIosDownloadURL() {
		return CampaignInfo_IosDownloadURL_DEFAULT
	}
	return *p.IosDownloadURL
}

var CampaignInfo_AndroidDownloadURL_DEFAULT string

func (p *CampaignInfo) GetAndroidDownloadURL() (v string) {
	if !p.IsSetAndroidDownloadURL() {
		return CampaignInfo_AndroidDownloadURL_DEFAULT
	}
	return *p.AndroidDownloadURL
}

func (p *CampaignInfo) GetStatus() (v string) {
	return p.Status
}

func (p *CampaignInfo) GetAttachments() (v []*CampaignAttachment) {
	return p.Attachments
}

func (p *CampaignInfo) GetCreatedAt() (v string) {
	return p.CreatedAt
}

func (p *CampaignInfo) GetUpdatedAt() (v string) {
	return p.UpdatedAt
}

var fieldIDToName_CampaignInfo = map[int16]string{
	1:  "id",
	2:  "campaign_id",
	3:  "user_id",
	4:  "team_id",
	5:  "campaign_name",
	6:  "promotion_objective",
	7:  "optimization_goal",
	8:  "location",
	9:  "age",
	10: "gender",
	11: "languages",
	12: "spending_power",
	13: "operating_system",
	14: "os_versions",
	15: "device_models",
	16: "connection_type",
	17: "device_price_type",
	18: "device_price_min",
	19: "device_price_max",
	20: "planned_start_time",
	21: "planned_end_time",
	22: "time_zone",
	23: "dayparting_type",
	24: "dayparting_schedule",
	25: "frequency_cap_type",
	26: "frequency_cap_times",
	27: "frequency_cap_days",
	28: "budget_type",
	29: "budget_amount",
	30: "website",
	31: "ios_download_url",
	32: "android_download_url",
	33: "status",
	34: "attachments",
	35: "created_at",
	36: "updated_at",
}

func (p *CampaignInfo) IsSetLocation() bool {
	return p.Location != nil
}

func (p *CampaignInfo) IsSetAge() bool {
	return p.Age != nil
}

func (p *CampaignInfo) IsSetGender() bool {
	return p.Gender != nil
}

func (p *CampaignInfo) IsSetLanguages() bool {
	return p.Languages != nil
}

func (p *CampaignInfo) IsSetSpendingPower() bool {
	return p.SpendingPower != nil
}

func (p *CampaignInfo) IsSetOperatingSystem() bool {
	return p.OperatingSystem != nil
}

func (p *CampaignInfo) IsSetOsVersions() bool {
	return p.OsVersions != nil
}

func (p *CampaignInfo) IsSetDeviceModels() bool {
	return p.DeviceModels != nil
}

func (p *CampaignInfo) IsSetConnectionType() bool {
	return p.ConnectionType != nil
}

func (p *CampaignInfo) IsSetDevicePriceMin() bool {
	return p.DevicePriceMin != nil
}

func (p *CampaignInfo) IsSetDevicePriceMax() bool {
	return p.DevicePriceMax != nil
}

func (p *CampaignInfo) IsSetTimeZone() bool {
	return p.TimeZone != nil
}

func (p *CampaignInfo) IsSetDaypartingSchedule() bool {
	return p.DaypartingSchedule != nil
}

func (p *CampaignInfo) IsSetFrequencyCapTimes() bool {
	return p.FrequencyCapTimes != nil
}

func (p *CampaignInfo) IsSetFrequencyCapDays() bool {
	return p.FrequencyCapDays != nil
}

func (p *CampaignInfo) IsSetWebsite() bool {
	return p.Website != nil
}

func (p *CampaignInfo) IsSetIosDownloadURL() bool {
	return p.IosDownloadURL != nil
}

func (p *CampaignInfo) IsSetAndroidDownloadURL() bool {
	return p.AndroidDownloadURL != nil
}

func (p *CampaignInfo) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 4:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 5:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 6:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField6(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 7:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField7(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 8:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField8(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 9:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField9(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 10:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField10(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 11:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField11(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 12:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField12(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 13:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField13(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 14:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField14(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 15:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField15(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 16:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField16(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 17:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField17(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 18:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField18(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 19:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField19(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 20:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField20(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 21:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField21(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 22:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField22(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 23:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField23(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 24:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField24(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 25:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField25(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 26:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField26(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 27:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField27(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 28:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField28(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 29:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField29(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 30:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField30(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 31:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField31(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 32:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField32(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 33:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField33(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 34:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField34(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 35:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField35(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 36:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField36(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignInfo[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignInfo) ReadField1(iprot thrift.TProtocol) error {

	var _field int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = v
	}
	p.ID = _field
	return nil
}
func (p *CampaignInfo) ReadField2(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CampaignID = _field
	return nil
}
func (p *CampaignInfo) ReadField3(iprot thrift.TProtocol) error {

	var _field int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = v
	}
	p.UserID = _field
	return nil
}
func (p *CampaignInfo) ReadField4(iprot thrift.TProtocol) error {

	var _field int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = v
	}
	p.TeamID = _field
	return nil
}
func (p *CampaignInfo) ReadField5(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CampaignName = _field
	return nil
}
func (p *CampaignInfo) ReadField6(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.PromotionObjective = _field
	return nil
}
func (p *CampaignInfo) ReadField7(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.OptimizationGoal = _field
	return nil
}
func (p *CampaignInfo) ReadField8(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Location = _field
	return nil
}
func (p *CampaignInfo) ReadField9(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Age = _field
	return nil
}
func (p *CampaignInfo) ReadField10(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Gender = _field
	return nil
}
func (p *CampaignInfo) ReadField11(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Languages = _field
	return nil
}
func (p *CampaignInfo) ReadField12(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.SpendingPower = _field
	return nil
}
func (p *CampaignInfo) ReadField13(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.OperatingSystem = _field
	return nil
}
func (p *CampaignInfo) ReadField14(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.OsVersions = _field
	return nil
}
func (p *CampaignInfo) ReadField15(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.DeviceModels = _field
	return nil
}
func (p *CampaignInfo) ReadField16(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.ConnectionType = _field
	return nil
}
func (p *CampaignInfo) ReadField17(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.DevicePriceType = _field
	return nil
}
func (p *CampaignInfo) ReadField18(iprot thrift.TProtocol) error {

	var _field *float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DevicePriceMin = _field
	return nil
}
func (p *CampaignInfo) ReadField19(iprot thrift.TProtocol) error {

	var _field *float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DevicePriceMax = _field
	return nil
}
func (p *CampaignInfo) ReadField20(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.PlannedStartTime = _field
	return nil
}
func (p *CampaignInfo) ReadField21(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.PlannedEndTime = _field
	return nil
}
func (p *CampaignInfo) ReadField22(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.TimeZone = _field
	return nil
}
func (p *CampaignInfo) ReadField23(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.DaypartingType = _field
	return nil
}
func (p *CampaignInfo) ReadField24(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DaypartingSchedule = _field
	return nil
}
func (p *CampaignInfo) ReadField25(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.FrequencyCapType = _field
	return nil
}
func (p *CampaignInfo) ReadField26(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.FrequencyCapTimes = _field
	return nil
}
func (p *CampaignInfo) ReadField27(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.FrequencyCapDays = _field
	return nil
}
func (p *CampaignInfo) ReadField28(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.BudgetType = _field
	return nil
}
func (p *CampaignInfo) ReadField29(iprot thrift.TProtocol) error {

	var _field float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = v
	}
	p.BudgetAmount = _field
	return nil
}
func (p *CampaignInfo) ReadField30(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Website = _field
	return nil
}
func (p *CampaignInfo) ReadField31(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.IosDownloadURL = _field
	return nil
}
func (p *CampaignInfo) ReadField32(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.AndroidDownloadURL = _field
	return nil
}
func (p *CampaignInfo) ReadField33(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.Status = _field
	return nil
}
func (p *CampaignInfo) ReadField34(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]*CampaignAttachment, 0, size)
	values := make([]CampaignAttachment, size)
	for i := 0; i < size; i++ {
		_elem := &values[i]
		_elem.InitDefault()

		if err := _elem.Read(iprot); err != nil {
			return err
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Attachments = _field
	return nil
}
func (p *CampaignInfo) ReadField35(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CreatedAt = _field
	return nil
}
func (p *CampaignInfo) ReadField36(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.UpdatedAt = _field
	return nil
}

func (p *CampaignInfo) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("CampaignInfo"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField6(oprot); err != nil {
			fieldId = 6
			goto WriteFieldError
		}
		if err = p.writeField7(oprot); err != nil {
			fieldId = 7
			goto WriteFieldError
		}
		if err = p.writeField8(oprot); err != nil {
			fieldId = 8
			goto WriteFieldError
		}
		if err = p.writeField9(oprot); err != nil {
			fieldId = 9
			goto WriteFieldError
		}
		if err = p.writeField10(oprot); err != nil {
			fieldId = 10
			goto WriteFieldError
		}
		if err = p.writeField11(oprot); err != nil {
			fieldId = 11
			goto WriteFieldError
		}
		if err = p.writeField12(oprot); err != nil {
			fieldId = 12
			goto WriteFieldError
		}
		if err = p.writeField13(oprot); err != nil {
			fieldId = 13
			goto WriteFieldError
		}
		if err = p.writeField14(oprot); err != nil {
			fieldId = 14
			goto WriteFieldError
		}
		if err = p.writeField15(oprot); err != nil {
			fieldId = 15
			goto WriteFieldError
		}
		if err = p.writeField16(oprot); err != nil {
			fieldId = 16
			goto WriteFieldError
		}
		if err = p.writeField17(oprot); err != nil {
			fieldId = 17
			goto WriteFieldError
		}
		if err = p.writeField18(oprot); err != nil {
			fieldId = 18
			goto WriteFieldError
		}
		if err = p.writeField19(oprot); err != nil {
			fieldId = 19
			goto WriteFieldError
		}
		if err = p.writeField20(oprot); err != nil {
			fieldId = 20
			goto WriteFieldError
		}
		if err = p.writeField21(oprot); err != nil {
			fieldId = 21
			goto WriteFieldError
		}
		if err = p.writeField22(oprot); err != nil {
			fieldId = 22
			goto WriteFieldError
		}
		if err = p.writeField23(oprot); err != nil {
			fieldId = 23
			goto WriteFieldError
		}
		if err = p.writeField24(oprot); err != nil {
			fieldId = 24
			goto WriteFieldError
		}
		if err = p.writeField25(oprot); err != nil {
			fieldId = 25
			goto WriteFieldError
		}
		if err = p.writeField26(oprot); err != nil {
			fieldId = 26
			goto WriteFieldError
		}
		if err = p.writeField27(oprot); err != nil {
			fieldId = 27
			goto WriteFieldError
		}
		if err = p.writeField28(oprot); err != nil {
			fieldId = 28
			goto WriteFieldError
		}
		if err = p.writeField29(oprot); err != nil {
			fieldId = 29
			goto WriteFieldError
		}
		if err = p.writeField30(oprot); err != nil {
			fieldId = 30
			goto WriteFieldError
		}
		if err = p.writeField31(oprot); err != nil {
			fieldId = 31
			goto WriteFieldError
		}
		if err = p.writeField32(oprot); err != nil {
			fieldId = 32
			goto WriteFieldError
		}
		if err = p.writeField33(oprot); err != nil {
			fieldId = 33
			goto WriteFieldError
		}
		if err = p.writeField34(oprot); err != nil {
			fieldId = 34
			goto WriteFieldError
		}
		if err = p.writeField35(oprot); err != nil {
			fieldId = 35
			goto WriteFieldError
		}
		if err = p.writeField36(oprot); err != nil {
			fieldId = 36
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignInfo) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("id", thrift.I64, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI64(p.ID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignInfo) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign_id", thrift.STRING, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CampaignID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *CampaignInfo) writeField3(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("user_id", thrift.I64, 3); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI64(p.UserID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *CampaignInfo) writeField4(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("team_id", thrift.I64, 4); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI64(p.TeamID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *CampaignInfo) writeField5(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign_name", thrift.STRING, 5); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CampaignName); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *CampaignInfo) writeField6(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("promotion_objective", thrift.STRING, 6); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.PromotionObjective); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 end error: ", p), err)
}

func (p *CampaignInfo) writeField7(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("optimization_goal", thrift.STRING, 7); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.OptimizationGoal); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 end error: ", p), err)
}

func (p *CampaignInfo) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetLocation() {
		if err = oprot.WriteFieldBegin("location", thrift.LIST, 8); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.Location)); err != nil {
			return err
		}
		for _, v := range p.Location {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 end error: ", p), err)
}

func (p *CampaignInfo) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetAge() {
		if err = oprot.WriteFieldBegin("age", thrift.I64, 9); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.Age); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 end error: ", p), err)
}

func (p *CampaignInfo) writeField10(oprot thrift.TProtocol) (err error) {
	if p.IsSetGender() {
		if err = oprot.WriteFieldBegin("gender", thrift.I64, 10); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.Gender); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 end error: ", p), err)
}

func (p *CampaignInfo) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetLanguages() {
		if err = oprot.WriteFieldBegin("languages", thrift.LIST, 11); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.Languages)); err != nil {
			return err
		}
		for _, v := range p.Languages {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 end error: ", p), err)
}

func (p *CampaignInfo) writeField12(oprot thrift.TProtocol) (err error) {
	if p.IsSetSpendingPower() {
		if err = oprot.WriteFieldBegin("spending_power", thrift.I64, 12); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.SpendingPower); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 12 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 12 end error: ", p), err)
}

func (p *CampaignInfo) writeField13(oprot thrift.TProtocol) (err error) {
	if p.IsSetOperatingSystem() {
		if err = oprot.WriteFieldBegin("operating_system", thrift.I64, 13); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.OperatingSystem); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 13 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 13 end error: ", p), err)
}

func (p *CampaignInfo) writeField14(oprot thrift.TProtocol) (err error) {
	if p.IsSetOsVersions() {
		if err = oprot.WriteFieldBegin("os_versions", thrift.LIST, 14); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.OsVersions)); err != nil {
			return err
		}
		for _, v := range p.OsVersions {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 14 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 14 end error: ", p), err)
}

func (p *CampaignInfo) writeField15(oprot thrift.TProtocol) (err error) {
	if p.IsSetDeviceModels() {
		if err = oprot.WriteFieldBegin("device_models", thrift.LIST, 15); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.DeviceModels)); err != nil {
			return err
		}
		for _, v := range p.DeviceModels {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 15 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 15 end error: ", p), err)
}

func (p *CampaignInfo) writeField16(oprot thrift.TProtocol) (err error) {
	if p.IsSetConnectionType() {
		if err = oprot.WriteFieldBegin("connection_type", thrift.I64, 16); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.ConnectionType); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 16 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 16 end error: ", p), err)
}

func (p *CampaignInfo) writeField17(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("device_price_type", thrift.I32, 17); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.DevicePriceType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 17 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 17 end error: ", p), err)
}

func (p *CampaignInfo) writeField18(oprot thrift.TProtocol) (err error) {
	if p.IsSetDevicePriceMin() {
		if err = oprot.WriteFieldBegin("device_price_min", thrift.DOUBLE, 18); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteDouble(*p.DevicePriceMin); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 18 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 18 end error: ", p), err)
}

func (p *CampaignInfo) writeField19(oprot thrift.TProtocol) (err error) {
	if p.IsSetDevicePriceMax() {
		if err = oprot.WriteFieldBegin("device_price_max", thrift.DOUBLE, 19); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteDouble(*p.DevicePriceMax); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 19 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 19 end error: ", p), err)
}

func (p *CampaignInfo) writeField20(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("planned_start_time", thrift.STRING, 20); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.PlannedStartTime); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 20 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 20 end error: ", p), err)
}

func (p *CampaignInfo) writeField21(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("planned_end_time", thrift.STRING, 21); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.PlannedEndTime); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 21 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 21 end error: ", p), err)
}

func (p *CampaignInfo) writeField22(oprot thrift.TProtocol) (err error) {
	if p.IsSetTimeZone() {
		if err = oprot.WriteFieldBegin("time_zone", thrift.I64, 22); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.TimeZone); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 22 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 22 end error: ", p), err)
}

func (p *CampaignInfo) writeField23(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("dayparting_type", thrift.I32, 23); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.DaypartingType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 23 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 23 end error: ", p), err)
}

func (p *CampaignInfo) writeField24(oprot thrift.TProtocol) (err error) {
	if p.IsSetDaypartingSchedule() {
		if err = oprot.WriteFieldBegin("dayparting_schedule", thrift.STRING, 24); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.DaypartingSchedule); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 24 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 24 end error: ", p), err)
}

func (p *CampaignInfo) writeField25(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("frequency_cap_type", thrift.I32, 25); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.FrequencyCapType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 25 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 25 end error: ", p), err)
}

func (p *CampaignInfo) writeField26(oprot thrift.TProtocol) (err error) {
	if p.IsSetFrequencyCapTimes() {
		if err = oprot.WriteFieldBegin("frequency_cap_times", thrift.I32, 26); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.FrequencyCapTimes); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 26 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 26 end error: ", p), err)
}

func (p *CampaignInfo) writeField27(oprot thrift.TProtocol) (err error) {
	if p.IsSetFrequencyCapDays() {
		if err = oprot.WriteFieldBegin("frequency_cap_days", thrift.I32, 27); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.FrequencyCapDays); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 27 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 27 end error: ", p), err)
}

func (p *CampaignInfo) writeField28(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("budget_type", thrift.I32, 28); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.BudgetType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 28 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 28 end error: ", p), err)
}

func (p *CampaignInfo) writeField29(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("budget_amount", thrift.DOUBLE, 29); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteDouble(p.BudgetAmount); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 29 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 29 end error: ", p), err)
}

func (p *CampaignInfo) writeField30(oprot thrift.TProtocol) (err error) {
	if p.IsSetWebsite() {
		if err = oprot.WriteFieldBegin("website", thrift.STRING, 30); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Website); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 30 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 30 end error: ", p), err)
}

func (p *CampaignInfo) writeField31(oprot thrift.TProtocol) (err error) {
	if p.IsSetIosDownloadURL() {
		if err = oprot.WriteFieldBegin("ios_download_url", thrift.STRING, 31); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.IosDownloadURL); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 31 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 31 end error: ", p), err)
}

func (p *CampaignInfo) writeField32(oprot thrift.TProtocol) (err error) {
	if p.IsSetAndroidDownloadURL() {
		if err = oprot.WriteFieldBegin("android_download_url", thrift.STRING, 32); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.AndroidDownloadURL); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 32 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 32 end error: ", p), err)
}

func (p *CampaignInfo) writeField33(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("status", thrift.STRING, 33); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Status); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 33 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 33 end error: ", p), err)
}

func (p *CampaignInfo) writeField34(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("attachments", thrift.LIST, 34); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Attachments)); err != nil {
		return err
	}
	for _, v := range p.Attachments {
		if err := v.Write(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 34 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 34 end error: ", p), err)
}

func (p *CampaignInfo) writeField35(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("created_at", thrift.STRING, 35); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CreatedAt); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 35 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 35 end error: ", p), err)
}

func (p *CampaignInfo) writeField36(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("updated_at", thrift.STRING, 36); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.UpdatedAt); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 36 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 36 end error: ", p), err)
}

func (p *CampaignInfo) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignInfo(%+v)", *p)

}

// 创建Campaign请求
type CreateCampaignReq struct {
	CampaignName       string   `thrift:"campaign_name,1" form:"campaign_name" json:"campaign_name"`
	PromotionObjective string   `thrift:"promotion_objective,2" form:"promotion_objective" json:"promotion_objective"`
	OptimizationGoal   string   `thrift:"optimization_goal,3" form:"optimization_goal" json:"optimization_goal"`
	Location           []int64  `thrift:"location,4,optional,list<i64>" form:"location" json:"location,omitempty"`
	Age                *int64   `thrift:"age,5,optional" form:"age" json:"age,omitempty"`
	Gender             *int64   `thrift:"gender,6,optional" form:"gender" json:"gender,omitempty"`
	Languages          []int64  `thrift:"languages,7,optional,list<i64>" form:"languages" json:"languages,omitempty"`
	SpendingPower      *int64   `thrift:"spending_power,8,optional" form:"spending_power" json:"spending_power,omitempty"`
	OperatingSystem    *int64   `thrift:"operating_system,9,optional" form:"operating_system" json:"operating_system,omitempty"`
	OsVersions         []int64  `thrift:"os_versions,10,optional,list<i64>" form:"os_versions" json:"os_versions,omitempty"`
	DeviceModels       []int64  `thrift:"device_models,11,optional,list<i64>" form:"device_models" json:"device_models,omitempty"`
	ConnectionType     *int64   `thrift:"connection_type,12,optional" form:"connection_type" json:"connection_type,omitempty"`
	DevicePriceType    int32    `thrift:"device_price_type,13" form:"device_price_type" json:"device_price_type"`
	DevicePriceMin     *float64 `thrift:"device_price_min,14,optional" form:"device_price_min" json:"device_price_min,omitempty"`
	DevicePriceMax     *float64 `thrift:"device_price_max,15,optional" form:"device_price_max" json:"device_price_max,omitempty"`
	PlannedStartTime   string   `thrift:"planned_start_time,16" form:"planned_start_time" json:"planned_start_time"`
	PlannedEndTime     string   `thrift:"planned_end_time,17" form:"planned_end_time" json:"planned_end_time"`
	TimeZone           *int64   `thrift:"time_zone,18,optional" form:"time_zone" json:"time_zone,omitempty"`
	DaypartingType     int32    `thrift:"dayparting_type,19" form:"dayparting_type" json:"dayparting_type"`
	DaypartingSchedule *string  `thrift:"dayparting_schedule,20,optional" form:"dayparting_schedule" json:"dayparting_schedule,omitempty"`
	FrequencyCapType   int32    `thrift:"frequency_cap_type,21" form:"frequency_cap_type" json:"frequency_cap_type"`
	FrequencyCapTimes  *int32   `thrift:"frequency_cap_times,22,optional" form:"frequency_cap_times" json:"frequency_cap_times,omitempty"`
	FrequencyCapDays   *int32   `thrift:"frequency_cap_days,23,optional" form:"frequency_cap_days" json:"frequency_cap_days,omitempty"`
	BudgetType         int32    `thrift:"budget_type,24" form:"budget_type" json:"budget_type"`
	BudgetAmount       float64  `thrift:"budget_amount,25" form:"budget_amount" json:"budget_amount"`
	Website            *string  `thrift:"website,26,optional" form:"website" json:"website,omitempty"`
	IosDownloadURL     *string  `thrift:"ios_download_url,27,optional" form:"ios_download_url" json:"ios_download_url,omitempty"`
	AndroidDownloadURL *string  `thrift:"android_download_url,28,optional" form:"android_download_url" json:"android_download_url,omitempty"`
	// 附件URL列表
	AttachmentUrls []string `thrift:"attachment_urls,29,optional,list<string>" form:"attachment_urls" json:"attachment_urls,omitempty"`
}

func NewCreateCampaignReq() *CreateCampaignReq {
	return &CreateCampaignReq{}
}

func (p *CreateCampaignReq) InitDefault() {
}

func (p *CreateCampaignReq) GetCampaignName() (v string) {
	return p.CampaignName
}

func (p *CreateCampaignReq) GetPromotionObjective() (v string) {
	return p.PromotionObjective
}

func (p *CreateCampaignReq) GetOptimizationGoal() (v string) {
	return p.OptimizationGoal
}

var CreateCampaignReq_Location_DEFAULT []int64

func (p *CreateCampaignReq) GetLocation() (v []int64) {
	if !p.IsSetLocation() {
		return CreateCampaignReq_Location_DEFAULT
	}
	return p.Location
}

var CreateCampaignReq_Age_DEFAULT int64

func (p *CreateCampaignReq) GetAge() (v int64) {
	if !p.IsSetAge() {
		return CreateCampaignReq_Age_DEFAULT
	}
	return *p.Age
}

var CreateCampaignReq_Gender_DEFAULT int64

func (p *CreateCampaignReq) GetGender() (v int64) {
	if !p.IsSetGender() {
		return CreateCampaignReq_Gender_DEFAULT
	}
	return *p.Gender
}

var CreateCampaignReq_Languages_DEFAULT []int64

func (p *CreateCampaignReq) GetLanguages() (v []int64) {
	if !p.IsSetLanguages() {
		return CreateCampaignReq_Languages_DEFAULT
	}
	return p.Languages
}

var CreateCampaignReq_SpendingPower_DEFAULT int64

func (p *CreateCampaignReq) GetSpendingPower() (v int64) {
	if !p.IsSetSpendingPower() {
		return CreateCampaignReq_SpendingPower_DEFAULT
	}
	return *p.SpendingPower
}

var CreateCampaignReq_OperatingSystem_DEFAULT int64

func (p *CreateCampaignReq) GetOperatingSystem() (v int64) {
	if !p.IsSetOperatingSystem() {
		return CreateCampaignReq_OperatingSystem_DEFAULT
	}
	return *p.OperatingSystem
}

var CreateCampaignReq_OsVersions_DEFAULT []int64

func (p *CreateCampaignReq) GetOsVersions() (v []int64) {
	if !p.IsSetOsVersions() {
		return CreateCampaignReq_OsVersions_DEFAULT
	}
	return p.OsVersions
}

var CreateCampaignReq_DeviceModels_DEFAULT []int64

func (p *CreateCampaignReq) GetDeviceModels() (v []int64) {
	if !p.IsSetDeviceModels() {
		return CreateCampaignReq_DeviceModels_DEFAULT
	}
	return p.DeviceModels
}

var CreateCampaignReq_ConnectionType_DEFAULT int64

func (p *CreateCampaignReq) GetConnectionType() (v int64) {
	if !p.IsSetConnectionType() {
		return CreateCampaignReq_ConnectionType_DEFAULT
	}
	return *p.ConnectionType
}

func (p *CreateCampaignReq) GetDevicePriceType() (v int32) {
	return p.DevicePriceType
}

var CreateCampaignReq_DevicePriceMin_DEFAULT float64

func (p *CreateCampaignReq) GetDevicePriceMin() (v float64) {
	if !p.IsSetDevicePriceMin() {
		return CreateCampaignReq_DevicePriceMin_DEFAULT
	}
	return *p.DevicePriceMin
}

var CreateCampaignReq_DevicePriceMax_DEFAULT float64

func (p *CreateCampaignReq) GetDevicePriceMax() (v float64) {
	if !p.IsSetDevicePriceMax() {
		return CreateCampaignReq_DevicePriceMax_DEFAULT
	}
	return *p.DevicePriceMax
}

func (p *CreateCampaignReq) GetPlannedStartTime() (v string) {
	return p.PlannedStartTime
}

func (p *CreateCampaignReq) GetPlannedEndTime() (v string) {
	return p.PlannedEndTime
}

var CreateCampaignReq_TimeZone_DEFAULT int64

func (p *CreateCampaignReq) GetTimeZone() (v int64) {
	if !p.IsSetTimeZone() {
		return CreateCampaignReq_TimeZone_DEFAULT
	}
	return *p.TimeZone
}

func (p *CreateCampaignReq) GetDaypartingType() (v int32) {
	return p.DaypartingType
}

var CreateCampaignReq_DaypartingSchedule_DEFAULT string

func (p *CreateCampaignReq) GetDaypartingSchedule() (v string) {
	if !p.IsSetDaypartingSchedule() {
		return CreateCampaignReq_DaypartingSchedule_DEFAULT
	}
	return *p.DaypartingSchedule
}

func (p *CreateCampaignReq) GetFrequencyCapType() (v int32) {
	return p.FrequencyCapType
}

var CreateCampaignReq_FrequencyCapTimes_DEFAULT int32

func (p *CreateCampaignReq) GetFrequencyCapTimes() (v int32) {
	if !p.IsSetFrequencyCapTimes() {
		return CreateCampaignReq_FrequencyCapTimes_DEFAULT
	}
	return *p.FrequencyCapTimes
}

var CreateCampaignReq_FrequencyCapDays_DEFAULT int32

func (p *CreateCampaignReq) GetFrequencyCapDays() (v int32) {
	if !p.IsSetFrequencyCapDays() {
		return CreateCampaignReq_FrequencyCapDays_DEFAULT
	}
	return *p.FrequencyCapDays
}

func (p *CreateCampaignReq) GetBudgetType() (v int32) {
	return p.BudgetType
}

func (p *CreateCampaignReq) GetBudgetAmount() (v float64) {
	return p.BudgetAmount
}

var CreateCampaignReq_Website_DEFAULT string

func (p *CreateCampaignReq) GetWebsite() (v string) {
	if !p.IsSetWebsite() {
		return CreateCampaignReq_Website_DEFAULT
	}
	return *p.Website
}

var CreateCampaignReq_IosDownloadURL_DEFAULT string

func (p *CreateCampaignReq) GetIosDownloadURL() (v string) {
	if !p.IsSetIosDownloadURL() {
		return CreateCampaignReq_IosDownloadURL_DEFAULT
	}
	return *p.IosDownloadURL
}

var CreateCampaignReq_AndroidDownloadURL_DEFAULT string

func (p *CreateCampaignReq) GetAndroidDownloadURL() (v string) {
	if !p.IsSetAndroidDownloadURL() {
		return CreateCampaignReq_AndroidDownloadURL_DEFAULT
	}
	return *p.AndroidDownloadURL
}

var CreateCampaignReq_AttachmentUrls_DEFAULT []string

func (p *CreateCampaignReq) GetAttachmentUrls() (v []string) {
	if !p.IsSetAttachmentUrls() {
		return CreateCampaignReq_AttachmentUrls_DEFAULT
	}
	return p.AttachmentUrls
}

var fieldIDToName_CreateCampaignReq = map[int16]string{
	1:  "campaign_name",
	2:  "promotion_objective",
	3:  "optimization_goal",
	4:  "location",
	5:  "age",
	6:  "gender",
	7:  "languages",
	8:  "spending_power",
	9:  "operating_system",
	10: "os_versions",
	11: "device_models",
	12: "connection_type",
	13: "device_price_type",
	14: "device_price_min",
	15: "device_price_max",
	16: "planned_start_time",
	17: "planned_end_time",
	18: "time_zone",
	19: "dayparting_type",
	20: "dayparting_schedule",
	21: "frequency_cap_type",
	22: "frequency_cap_times",
	23: "frequency_cap_days",
	24: "budget_type",
	25: "budget_amount",
	26: "website",
	27: "ios_download_url",
	28: "android_download_url",
	29: "attachment_urls",
}

func (p *CreateCampaignReq) IsSetLocation() bool {
	return p.Location != nil
}

func (p *CreateCampaignReq) IsSetAge() bool {
	return p.Age != nil
}

func (p *CreateCampaignReq) IsSetGender() bool {
	return p.Gender != nil
}

func (p *CreateCampaignReq) IsSetLanguages() bool {
	return p.Languages != nil
}

func (p *CreateCampaignReq) IsSetSpendingPower() bool {
	return p.SpendingPower != nil
}

func (p *CreateCampaignReq) IsSetOperatingSystem() bool {
	return p.OperatingSystem != nil
}

func (p *CreateCampaignReq) IsSetOsVersions() bool {
	return p.OsVersions != nil
}

func (p *CreateCampaignReq) IsSetDeviceModels() bool {
	return p.DeviceModels != nil
}

func (p *CreateCampaignReq) IsSetConnectionType() bool {
	return p.ConnectionType != nil
}

func (p *CreateCampaignReq) IsSetDevicePriceMin() bool {
	return p.DevicePriceMin != nil
}

func (p *CreateCampaignReq) IsSetDevicePriceMax() bool {
	return p.DevicePriceMax != nil
}

func (p *CreateCampaignReq) IsSetTimeZone() bool {
	return p.TimeZone != nil
}

func (p *CreateCampaignReq) IsSetDaypartingSchedule() bool {
	return p.DaypartingSchedule != nil
}

func (p *CreateCampaignReq) IsSetFrequencyCapTimes() bool {
	return p.FrequencyCapTimes != nil
}

func (p *CreateCampaignReq) IsSetFrequencyCapDays() bool {
	return p.FrequencyCapDays != nil
}

func (p *CreateCampaignReq) IsSetWebsite() bool {
	return p.Website != nil
}

func (p *CreateCampaignReq) IsSetIosDownloadURL() bool {
	return p.IosDownloadURL != nil
}

func (p *CreateCampaignReq) IsSetAndroidDownloadURL() bool {
	return p.AndroidDownloadURL != nil
}

func (p *CreateCampaignReq) IsSetAttachmentUrls() bool {
	return p.AttachmentUrls != nil
}

func (p *CreateCampaignReq) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 4:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 5:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 6:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField6(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 7:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField7(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 8:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField8(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 9:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField9(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 10:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField10(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 11:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField11(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 12:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField12(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 13:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField13(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 14:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField14(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 15:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField15(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 16:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField16(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 17:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField17(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 18:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField18(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 19:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField19(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 20:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField20(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 21:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField21(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 22:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField22(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 23:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField23(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 24:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField24(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 25:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField25(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 26:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField26(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 27:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField27(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 28:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField28(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 29:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField29(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CreateCampaignReq[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CreateCampaignReq) ReadField1(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CampaignName = _field
	return nil
}
func (p *CreateCampaignReq) ReadField2(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.PromotionObjective = _field
	return nil
}
func (p *CreateCampaignReq) ReadField3(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.OptimizationGoal = _field
	return nil
}
func (p *CreateCampaignReq) ReadField4(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Location = _field
	return nil
}
func (p *CreateCampaignReq) ReadField5(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Age = _field
	return nil
}
func (p *CreateCampaignReq) ReadField6(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Gender = _field
	return nil
}
func (p *CreateCampaignReq) ReadField7(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Languages = _field
	return nil
}
func (p *CreateCampaignReq) ReadField8(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.SpendingPower = _field
	return nil
}
func (p *CreateCampaignReq) ReadField9(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.OperatingSystem = _field
	return nil
}
func (p *CreateCampaignReq) ReadField10(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.OsVersions = _field
	return nil
}
func (p *CreateCampaignReq) ReadField11(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.DeviceModels = _field
	return nil
}
func (p *CreateCampaignReq) ReadField12(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.ConnectionType = _field
	return nil
}
func (p *CreateCampaignReq) ReadField13(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.DevicePriceType = _field
	return nil
}
func (p *CreateCampaignReq) ReadField14(iprot thrift.TProtocol) error {

	var _field *float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DevicePriceMin = _field
	return nil
}
func (p *CreateCampaignReq) ReadField15(iprot thrift.TProtocol) error {

	var _field *float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DevicePriceMax = _field
	return nil
}
func (p *CreateCampaignReq) ReadField16(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.PlannedStartTime = _field
	return nil
}
func (p *CreateCampaignReq) ReadField17(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.PlannedEndTime = _field
	return nil
}
func (p *CreateCampaignReq) ReadField18(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.TimeZone = _field
	return nil
}
func (p *CreateCampaignReq) ReadField19(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.DaypartingType = _field
	return nil
}
func (p *CreateCampaignReq) ReadField20(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DaypartingSchedule = _field
	return nil
}
func (p *CreateCampaignReq) ReadField21(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.FrequencyCapType = _field
	return nil
}
func (p *CreateCampaignReq) ReadField22(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.FrequencyCapTimes = _field
	return nil
}
func (p *CreateCampaignReq) ReadField23(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.FrequencyCapDays = _field
	return nil
}
func (p *CreateCampaignReq) ReadField24(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.BudgetType = _field
	return nil
}
func (p *CreateCampaignReq) ReadField25(iprot thrift.TProtocol) error {

	var _field float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = v
	}
	p.BudgetAmount = _field
	return nil
}
func (p *CreateCampaignReq) ReadField26(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Website = _field
	return nil
}
func (p *CreateCampaignReq) ReadField27(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.IosDownloadURL = _field
	return nil
}
func (p *CreateCampaignReq) ReadField28(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.AndroidDownloadURL = _field
	return nil
}
func (p *CreateCampaignReq) ReadField29(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]string, 0, size)
	for i := 0; i < size; i++ {

		var _elem string
		if v, err := iprot.ReadString(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.AttachmentUrls = _field
	return nil
}

func (p *CreateCampaignReq) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("CreateCampaignReq"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField6(oprot); err != nil {
			fieldId = 6
			goto WriteFieldError
		}
		if err = p.writeField7(oprot); err != nil {
			fieldId = 7
			goto WriteFieldError
		}
		if err = p.writeField8(oprot); err != nil {
			fieldId = 8
			goto WriteFieldError
		}
		if err = p.writeField9(oprot); err != nil {
			fieldId = 9
			goto WriteFieldError
		}
		if err = p.writeField10(oprot); err != nil {
			fieldId = 10
			goto WriteFieldError
		}
		if err = p.writeField11(oprot); err != nil {
			fieldId = 11
			goto WriteFieldError
		}
		if err = p.writeField12(oprot); err != nil {
			fieldId = 12
			goto WriteFieldError
		}
		if err = p.writeField13(oprot); err != nil {
			fieldId = 13
			goto WriteFieldError
		}
		if err = p.writeField14(oprot); err != nil {
			fieldId = 14
			goto WriteFieldError
		}
		if err = p.writeField15(oprot); err != nil {
			fieldId = 15
			goto WriteFieldError
		}
		if err = p.writeField16(oprot); err != nil {
			fieldId = 16
			goto WriteFieldError
		}
		if err = p.writeField17(oprot); err != nil {
			fieldId = 17
			goto WriteFieldError
		}
		if err = p.writeField18(oprot); err != nil {
			fieldId = 18
			goto WriteFieldError
		}
		if err = p.writeField19(oprot); err != nil {
			fieldId = 19
			goto WriteFieldError
		}
		if err = p.writeField20(oprot); err != nil {
			fieldId = 20
			goto WriteFieldError
		}
		if err = p.writeField21(oprot); err != nil {
			fieldId = 21
			goto WriteFieldError
		}
		if err = p.writeField22(oprot); err != nil {
			fieldId = 22
			goto WriteFieldError
		}
		if err = p.writeField23(oprot); err != nil {
			fieldId = 23
			goto WriteFieldError
		}
		if err = p.writeField24(oprot); err != nil {
			fieldId = 24
			goto WriteFieldError
		}
		if err = p.writeField25(oprot); err != nil {
			fieldId = 25
			goto WriteFieldError
		}
		if err = p.writeField26(oprot); err != nil {
			fieldId = 26
			goto WriteFieldError
		}
		if err = p.writeField27(oprot); err != nil {
			fieldId = 27
			goto WriteFieldError
		}
		if err = p.writeField28(oprot); err != nil {
			fieldId = 28
			goto WriteFieldError
		}
		if err = p.writeField29(oprot); err != nil {
			fieldId = 29
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CreateCampaignReq) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign_name", thrift.STRING, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CampaignName); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("promotion_objective", thrift.STRING, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.PromotionObjective); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField3(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("optimization_goal", thrift.STRING, 3); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.OptimizationGoal); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetLocation() {
		if err = oprot.WriteFieldBegin("location", thrift.LIST, 4); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.Location)); err != nil {
			return err
		}
		for _, v := range p.Location {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetAge() {
		if err = oprot.WriteFieldBegin("age", thrift.I64, 5); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.Age); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetGender() {
		if err = oprot.WriteFieldBegin("gender", thrift.I64, 6); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.Gender); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField7(oprot thrift.TProtocol) (err error) {
	if p.IsSetLanguages() {
		if err = oprot.WriteFieldBegin("languages", thrift.LIST, 7); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.Languages)); err != nil {
			return err
		}
		for _, v := range p.Languages {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetSpendingPower() {
		if err = oprot.WriteFieldBegin("spending_power", thrift.I64, 8); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.SpendingPower); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetOperatingSystem() {
		if err = oprot.WriteFieldBegin("operating_system", thrift.I64, 9); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.OperatingSystem); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField10(oprot thrift.TProtocol) (err error) {
	if p.IsSetOsVersions() {
		if err = oprot.WriteFieldBegin("os_versions", thrift.LIST, 10); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.OsVersions)); err != nil {
			return err
		}
		for _, v := range p.OsVersions {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetDeviceModels() {
		if err = oprot.WriteFieldBegin("device_models", thrift.LIST, 11); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.DeviceModels)); err != nil {
			return err
		}
		for _, v := range p.DeviceModels {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField12(oprot thrift.TProtocol) (err error) {
	if p.IsSetConnectionType() {
		if err = oprot.WriteFieldBegin("connection_type", thrift.I64, 12); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.ConnectionType); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 12 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 12 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField13(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("device_price_type", thrift.I32, 13); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.DevicePriceType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 13 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 13 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField14(oprot thrift.TProtocol) (err error) {
	if p.IsSetDevicePriceMin() {
		if err = oprot.WriteFieldBegin("device_price_min", thrift.DOUBLE, 14); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteDouble(*p.DevicePriceMin); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 14 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 14 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField15(oprot thrift.TProtocol) (err error) {
	if p.IsSetDevicePriceMax() {
		if err = oprot.WriteFieldBegin("device_price_max", thrift.DOUBLE, 15); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteDouble(*p.DevicePriceMax); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 15 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 15 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField16(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("planned_start_time", thrift.STRING, 16); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.PlannedStartTime); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 16 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 16 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField17(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("planned_end_time", thrift.STRING, 17); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.PlannedEndTime); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 17 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 17 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField18(oprot thrift.TProtocol) (err error) {
	if p.IsSetTimeZone() {
		if err = oprot.WriteFieldBegin("time_zone", thrift.I64, 18); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.TimeZone); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 18 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 18 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField19(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("dayparting_type", thrift.I32, 19); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.DaypartingType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 19 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 19 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField20(oprot thrift.TProtocol) (err error) {
	if p.IsSetDaypartingSchedule() {
		if err = oprot.WriteFieldBegin("dayparting_schedule", thrift.STRING, 20); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.DaypartingSchedule); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 20 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 20 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField21(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("frequency_cap_type", thrift.I32, 21); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.FrequencyCapType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 21 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 21 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField22(oprot thrift.TProtocol) (err error) {
	if p.IsSetFrequencyCapTimes() {
		if err = oprot.WriteFieldBegin("frequency_cap_times", thrift.I32, 22); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.FrequencyCapTimes); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 22 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 22 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField23(oprot thrift.TProtocol) (err error) {
	if p.IsSetFrequencyCapDays() {
		if err = oprot.WriteFieldBegin("frequency_cap_days", thrift.I32, 23); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.FrequencyCapDays); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 23 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 23 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField24(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("budget_type", thrift.I32, 24); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.BudgetType); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 24 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 24 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField25(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("budget_amount", thrift.DOUBLE, 25); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteDouble(p.BudgetAmount); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 25 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 25 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField26(oprot thrift.TProtocol) (err error) {
	if p.IsSetWebsite() {
		if err = oprot.WriteFieldBegin("website", thrift.STRING, 26); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Website); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 26 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 26 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField27(oprot thrift.TProtocol) (err error) {
	if p.IsSetIosDownloadURL() {
		if err = oprot.WriteFieldBegin("ios_download_url", thrift.STRING, 27); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.IosDownloadURL); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 27 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 27 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField28(oprot thrift.TProtocol) (err error) {
	if p.IsSetAndroidDownloadURL() {
		if err = oprot.WriteFieldBegin("android_download_url", thrift.STRING, 28); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.AndroidDownloadURL); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 28 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 28 end error: ", p), err)
}

func (p *CreateCampaignReq) writeField29(oprot thrift.TProtocol) (err error) {
	if p.IsSetAttachmentUrls() {
		if err = oprot.WriteFieldBegin("attachment_urls", thrift.LIST, 29); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.STRING, len(p.AttachmentUrls)); err != nil {
			return err
		}
		for _, v := range p.AttachmentUrls {
			if err := oprot.WriteString(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 29 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 29 end error: ", p), err)
}

func (p *CreateCampaignReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateCampaignReq(%+v)", *p)

}

// 创建Campaign响应
type CreateCampaignResp struct {
	Campaign *CampaignInfo    `thrift:"campaign,1" form:"campaign" json:"campaign" query:"campaign"`
	BaseResp *common.BaseResp `thrift:"base_resp,2" form:"base_resp" json:"base_resp" query:"base_resp"`
}

func NewCreateCampaignResp() *CreateCampaignResp {
	return &CreateCampaignResp{}
}

func (p *CreateCampaignResp) InitDefault() {
}

var CreateCampaignResp_Campaign_DEFAULT *CampaignInfo

func (p *CreateCampaignResp) GetCampaign() (v *CampaignInfo) {
	if !p.IsSetCampaign() {
		return CreateCampaignResp_Campaign_DEFAULT
	}
	return p.Campaign
}

var CreateCampaignResp_BaseResp_DEFAULT *common.BaseResp

func (p *CreateCampaignResp) GetBaseResp() (v *common.BaseResp) {
	if !p.IsSetBaseResp() {
		return CreateCampaignResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

var fieldIDToName_CreateCampaignResp = map[int16]string{
	1: "campaign",
	2: "base_resp",
}

func (p *CreateCampaignResp) IsSetCampaign() bool {
	return p.Campaign != nil
}

func (p *CreateCampaignResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *CreateCampaignResp) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CreateCampaignResp[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CreateCampaignResp) ReadField1(iprot thrift.TProtocol) error {
	_field := NewCampaignInfo()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Campaign = _field
	return nil
}
func (p *CreateCampaignResp) ReadField2(iprot thrift.TProtocol) error {
	_field := common.NewBaseResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.BaseResp = _field
	return nil
}

func (p *CreateCampaignResp) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("CreateCampaignResp"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CreateCampaignResp) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Campaign.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CreateCampaignResp) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("base_resp", thrift.STRUCT, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.BaseResp.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *CreateCampaignResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateCampaignResp(%+v)", *p)

}

// 更新Campaign请求
type UpdateCampaignReq struct {
	CampaignID         string   `thrift:"campaign_id,1" form:"campaign_id" json:"campaign_id"`
	CampaignName       *string  `thrift:"campaign_name,2,optional" form:"campaign_name" json:"campaign_name,omitempty"`
	PromotionObjective *string  `thrift:"promotion_objective,3,optional" form:"promotion_objective" json:"promotion_objective,omitempty"`
	OptimizationGoal   *string  `thrift:"optimization_goal,4,optional" form:"optimization_goal" json:"optimization_goal,omitempty"`
	Location           []int64  `thrift:"location,5,optional,list<i64>" form:"location" json:"location,omitempty"`
	Age                *int64   `thrift:"age,6,optional" form:"age" json:"age,omitempty"`
	Gender             *int64   `thrift:"gender,7,optional" form:"gender" json:"gender,omitempty"`
	Languages          []int64  `thrift:"languages,8,optional,list<i64>" form:"languages" json:"languages,omitempty"`
	SpendingPower      *int64   `thrift:"spending_power,9,optional" form:"spending_power" json:"spending_power,omitempty"`
	OperatingSystem    *int64   `thrift:"operating_system,10,optional" form:"operating_system" json:"operating_system,omitempty"`
	OsVersions         []int64  `thrift:"os_versions,11,optional,list<i64>" form:"os_versions" json:"os_versions,omitempty"`
	DeviceModels       []int64  `thrift:"device_models,12,optional,list<i64>" form:"device_models" json:"device_models,omitempty"`
	ConnectionType     *int64   `thrift:"connection_type,13,optional" form:"connection_type" json:"connection_type,omitempty"`
	DevicePriceType    *int32   `thrift:"device_price_type,14,optional" form:"device_price_type" json:"device_price_type,omitempty"`
	DevicePriceMin     *float64 `thrift:"device_price_min,15,optional" form:"device_price_min" json:"device_price_min,omitempty"`
	DevicePriceMax     *float64 `thrift:"device_price_max,16,optional" form:"device_price_max" json:"device_price_max,omitempty"`
	PlannedStartTime   *string  `thrift:"planned_start_time,17,optional" form:"planned_start_time" json:"planned_start_time,omitempty"`
	PlannedEndTime     *string  `thrift:"planned_end_time,18,optional" form:"planned_end_time" json:"planned_end_time,omitempty"`
	TimeZone           *int64   `thrift:"time_zone,19,optional" form:"time_zone" json:"time_zone,omitempty"`
	DaypartingType     *int32   `thrift:"dayparting_type,20,optional" form:"dayparting_type" json:"dayparting_type,omitempty"`
	DaypartingSchedule *string  `thrift:"dayparting_schedule,21,optional" form:"dayparting_schedule" json:"dayparting_schedule,omitempty"`
	FrequencyCapType   *int32   `thrift:"frequency_cap_type,22,optional" form:"frequency_cap_type" json:"frequency_cap_type,omitempty"`
	FrequencyCapTimes  *int32   `thrift:"frequency_cap_times,23,optional" form:"frequency_cap_times" json:"frequency_cap_times,omitempty"`
	FrequencyCapDays   *int32   `thrift:"frequency_cap_days,24,optional" form:"frequency_cap_days" json:"frequency_cap_days,omitempty"`
	BudgetType         *int32   `thrift:"budget_type,25,optional" form:"budget_type" json:"budget_type,omitempty"`
	BudgetAmount       *float64 `thrift:"budget_amount,26,optional" form:"budget_amount" json:"budget_amount,omitempty"`
	Website            *string  `thrift:"website,27,optional" form:"website" json:"website,omitempty"`
	IosDownloadURL     *string  `thrift:"ios_download_url,28,optional" form:"ios_download_url" json:"ios_download_url,omitempty"`
	AndroidDownloadURL *string  `thrift:"android_download_url,29,optional" form:"android_download_url" json:"android_download_url,omitempty"`
	// 附件URL列表
	AttachmentUrls []string `thrift:"attachment_urls,30,optional,list<string>" form:"attachment_urls" json:"attachment_urls,omitempty"`
}

func NewUpdateCampaignReq() *UpdateCampaignReq {
	return &UpdateCampaignReq{}
}

func (p *UpdateCampaignReq) InitDefault() {
}

func (p *UpdateCampaignReq) GetCampaignID() (v string) {
	return p.CampaignID
}

var UpdateCampaignReq_CampaignName_DEFAULT string

func (p *UpdateCampaignReq) GetCampaignName() (v string) {
	if !p.IsSetCampaignName() {
		return UpdateCampaignReq_CampaignName_DEFAULT
	}
	return *p.CampaignName
}

var UpdateCampaignReq_PromotionObjective_DEFAULT string

func (p *UpdateCampaignReq) GetPromotionObjective() (v string) {
	if !p.IsSetPromotionObjective() {
		return UpdateCampaignReq_PromotionObjective_DEFAULT
	}
	return *p.PromotionObjective
}

var UpdateCampaignReq_OptimizationGoal_DEFAULT string

func (p *UpdateCampaignReq) GetOptimizationGoal() (v string) {
	if !p.IsSetOptimizationGoal() {
		return UpdateCampaignReq_OptimizationGoal_DEFAULT
	}
	return *p.OptimizationGoal
}

var UpdateCampaignReq_Location_DEFAULT []int64

func (p *UpdateCampaignReq) GetLocation() (v []int64) {
	if !p.IsSetLocation() {
		return UpdateCampaignReq_Location_DEFAULT
	}
	return p.Location
}

var UpdateCampaignReq_Age_DEFAULT int64

func (p *UpdateCampaignReq) GetAge() (v int64) {
	if !p.IsSetAge() {
		return UpdateCampaignReq_Age_DEFAULT
	}
	return *p.Age
}

var UpdateCampaignReq_Gender_DEFAULT int64

func (p *UpdateCampaignReq) GetGender() (v int64) {
	if !p.IsSetGender() {
		return UpdateCampaignReq_Gender_DEFAULT
	}
	return *p.Gender
}

var UpdateCampaignReq_Languages_DEFAULT []int64

func (p *UpdateCampaignReq) GetLanguages() (v []int64) {
	if !p.IsSetLanguages() {
		return UpdateCampaignReq_Languages_DEFAULT
	}
	return p.Languages
}

var UpdateCampaignReq_SpendingPower_DEFAULT int64

func (p *UpdateCampaignReq) GetSpendingPower() (v int64) {
	if !p.IsSetSpendingPower() {
		return UpdateCampaignReq_SpendingPower_DEFAULT
	}
	return *p.SpendingPower
}

var UpdateCampaignReq_OperatingSystem_DEFAULT int64

func (p *UpdateCampaignReq) GetOperatingSystem() (v int64) {
	if !p.IsSetOperatingSystem() {
		return UpdateCampaignReq_OperatingSystem_DEFAULT
	}
	return *p.OperatingSystem
}

var UpdateCampaignReq_OsVersions_DEFAULT []int64

func (p *UpdateCampaignReq) GetOsVersions() (v []int64) {
	if !p.IsSetOsVersions() {
		return UpdateCampaignReq_OsVersions_DEFAULT
	}
	return p.OsVersions
}

var UpdateCampaignReq_DeviceModels_DEFAULT []int64

func (p *UpdateCampaignReq) GetDeviceModels() (v []int64) {
	if !p.IsSetDeviceModels() {
		return UpdateCampaignReq_DeviceModels_DEFAULT
	}
	return p.DeviceModels
}

var UpdateCampaignReq_ConnectionType_DEFAULT int64

func (p *UpdateCampaignReq) GetConnectionType() (v int64) {
	if !p.IsSetConnectionType() {
		return UpdateCampaignReq_ConnectionType_DEFAULT
	}
	return *p.ConnectionType
}

var UpdateCampaignReq_DevicePriceType_DEFAULT int32

func (p *UpdateCampaignReq) GetDevicePriceType() (v int32) {
	if !p.IsSetDevicePriceType() {
		return UpdateCampaignReq_DevicePriceType_DEFAULT
	}
	return *p.DevicePriceType
}

var UpdateCampaignReq_DevicePriceMin_DEFAULT float64

func (p *UpdateCampaignReq) GetDevicePriceMin() (v float64) {
	if !p.IsSetDevicePriceMin() {
		return UpdateCampaignReq_DevicePriceMin_DEFAULT
	}
	return *p.DevicePriceMin
}

var UpdateCampaignReq_DevicePriceMax_DEFAULT float64

func (p *UpdateCampaignReq) GetDevicePriceMax() (v float64) {
	if !p.IsSetDevicePriceMax() {
		return UpdateCampaignReq_DevicePriceMax_DEFAULT
	}
	return *p.DevicePriceMax
}

var UpdateCampaignReq_PlannedStartTime_DEFAULT string

func (p *UpdateCampaignReq) GetPlannedStartTime() (v string) {
	if !p.IsSetPlannedStartTime() {
		return UpdateCampaignReq_PlannedStartTime_DEFAULT
	}
	return *p.PlannedStartTime
}

var UpdateCampaignReq_PlannedEndTime_DEFAULT string

func (p *UpdateCampaignReq) GetPlannedEndTime() (v string) {
	if !p.IsSetPlannedEndTime() {
		return UpdateCampaignReq_PlannedEndTime_DEFAULT
	}
	return *p.PlannedEndTime
}

var UpdateCampaignReq_TimeZone_DEFAULT int64

func (p *UpdateCampaignReq) GetTimeZone() (v int64) {
	if !p.IsSetTimeZone() {
		return UpdateCampaignReq_TimeZone_DEFAULT
	}
	return *p.TimeZone
}

var UpdateCampaignReq_DaypartingType_DEFAULT int32

func (p *UpdateCampaignReq) GetDaypartingType() (v int32) {
	if !p.IsSetDaypartingType() {
		return UpdateCampaignReq_DaypartingType_DEFAULT
	}
	return *p.DaypartingType
}

var UpdateCampaignReq_DaypartingSchedule_DEFAULT string

func (p *UpdateCampaignReq) GetDaypartingSchedule() (v string) {
	if !p.IsSetDaypartingSchedule() {
		return UpdateCampaignReq_DaypartingSchedule_DEFAULT
	}
	return *p.DaypartingSchedule
}

var UpdateCampaignReq_FrequencyCapType_DEFAULT int32

func (p *UpdateCampaignReq) GetFrequencyCapType() (v int32) {
	if !p.IsSetFrequencyCapType() {
		return UpdateCampaignReq_FrequencyCapType_DEFAULT
	}
	return *p.FrequencyCapType
}

var UpdateCampaignReq_FrequencyCapTimes_DEFAULT int32

func (p *UpdateCampaignReq) GetFrequencyCapTimes() (v int32) {
	if !p.IsSetFrequencyCapTimes() {
		return UpdateCampaignReq_FrequencyCapTimes_DEFAULT
	}
	return *p.FrequencyCapTimes
}

var UpdateCampaignReq_FrequencyCapDays_DEFAULT int32

func (p *UpdateCampaignReq) GetFrequencyCapDays() (v int32) {
	if !p.IsSetFrequencyCapDays() {
		return UpdateCampaignReq_FrequencyCapDays_DEFAULT
	}
	return *p.FrequencyCapDays
}

var UpdateCampaignReq_BudgetType_DEFAULT int32

func (p *UpdateCampaignReq) GetBudgetType() (v int32) {
	if !p.IsSetBudgetType() {
		return UpdateCampaignReq_BudgetType_DEFAULT
	}
	return *p.BudgetType
}

var UpdateCampaignReq_BudgetAmount_DEFAULT float64

func (p *UpdateCampaignReq) GetBudgetAmount() (v float64) {
	if !p.IsSetBudgetAmount() {
		return UpdateCampaignReq_BudgetAmount_DEFAULT
	}
	return *p.BudgetAmount
}

var UpdateCampaignReq_Website_DEFAULT string

func (p *UpdateCampaignReq) GetWebsite() (v string) {
	if !p.IsSetWebsite() {
		return UpdateCampaignReq_Website_DEFAULT
	}
	return *p.Website
}

var UpdateCampaignReq_IosDownloadURL_DEFAULT string

func (p *UpdateCampaignReq) GetIosDownloadURL() (v string) {
	if !p.IsSetIosDownloadURL() {
		return UpdateCampaignReq_IosDownloadURL_DEFAULT
	}
	return *p.IosDownloadURL
}

var UpdateCampaignReq_AndroidDownloadURL_DEFAULT string

func (p *UpdateCampaignReq) GetAndroidDownloadURL() (v string) {
	if !p.IsSetAndroidDownloadURL() {
		return UpdateCampaignReq_AndroidDownloadURL_DEFAULT
	}
	return *p.AndroidDownloadURL
}

var UpdateCampaignReq_AttachmentUrls_DEFAULT []string

func (p *UpdateCampaignReq) GetAttachmentUrls() (v []string) {
	if !p.IsSetAttachmentUrls() {
		return UpdateCampaignReq_AttachmentUrls_DEFAULT
	}
	return p.AttachmentUrls
}

var fieldIDToName_UpdateCampaignReq = map[int16]string{
	1:  "campaign_id",
	2:  "campaign_name",
	3:  "promotion_objective",
	4:  "optimization_goal",
	5:  "location",
	6:  "age",
	7:  "gender",
	8:  "languages",
	9:  "spending_power",
	10: "operating_system",
	11: "os_versions",
	12: "device_models",
	13: "connection_type",
	14: "device_price_type",
	15: "device_price_min",
	16: "device_price_max",
	17: "planned_start_time",
	18: "planned_end_time",
	19: "time_zone",
	20: "dayparting_type",
	21: "dayparting_schedule",
	22: "frequency_cap_type",
	23: "frequency_cap_times",
	24: "frequency_cap_days",
	25: "budget_type",
	26: "budget_amount",
	27: "website",
	28: "ios_download_url",
	29: "android_download_url",
	30: "attachment_urls",
}

func (p *UpdateCampaignReq) IsSetCampaignName() bool {
	return p.CampaignName != nil
}

func (p *UpdateCampaignReq) IsSetPromotionObjective() bool {
	return p.PromotionObjective != nil
}

func (p *UpdateCampaignReq) IsSetOptimizationGoal() bool {
	return p.OptimizationGoal != nil
}

func (p *UpdateCampaignReq) IsSetLocation() bool {
	return p.Location != nil
}

func (p *UpdateCampaignReq) IsSetAge() bool {
	return p.Age != nil
}

func (p *UpdateCampaignReq) IsSetGender() bool {
	return p.Gender != nil
}

func (p *UpdateCampaignReq) IsSetLanguages() bool {
	return p.Languages != nil
}

func (p *UpdateCampaignReq) IsSetSpendingPower() bool {
	return p.SpendingPower != nil
}

func (p *UpdateCampaignReq) IsSetOperatingSystem() bool {
	return p.OperatingSystem != nil
}

func (p *UpdateCampaignReq) IsSetOsVersions() bool {
	return p.OsVersions != nil
}

func (p *UpdateCampaignReq) IsSetDeviceModels() bool {
	return p.DeviceModels != nil
}

func (p *UpdateCampaignReq) IsSetConnectionType() bool {
	return p.ConnectionType != nil
}

func (p *UpdateCampaignReq) IsSetDevicePriceType() bool {
	return p.DevicePriceType != nil
}

func (p *UpdateCampaignReq) IsSetDevicePriceMin() bool {
	return p.DevicePriceMin != nil
}

func (p *UpdateCampaignReq) IsSetDevicePriceMax() bool {
	return p.DevicePriceMax != nil
}

func (p *UpdateCampaignReq) IsSetPlannedStartTime() bool {
	return p.PlannedStartTime != nil
}

func (p *UpdateCampaignReq) IsSetPlannedEndTime() bool {
	return p.PlannedEndTime != nil
}

func (p *UpdateCampaignReq) IsSetTimeZone() bool {
	return p.TimeZone != nil
}

func (p *UpdateCampaignReq) IsSetDaypartingType() bool {
	return p.DaypartingType != nil
}

func (p *UpdateCampaignReq) IsSetDaypartingSchedule() bool {
	return p.DaypartingSchedule != nil
}

func (p *UpdateCampaignReq) IsSetFrequencyCapType() bool {
	return p.FrequencyCapType != nil
}

func (p *UpdateCampaignReq) IsSetFrequencyCapTimes() bool {
	return p.FrequencyCapTimes != nil
}

func (p *UpdateCampaignReq) IsSetFrequencyCapDays() bool {
	return p.FrequencyCapDays != nil
}

func (p *UpdateCampaignReq) IsSetBudgetType() bool {
	return p.BudgetType != nil
}

func (p *UpdateCampaignReq) IsSetBudgetAmount() bool {
	return p.BudgetAmount != nil
}

func (p *UpdateCampaignReq) IsSetWebsite() bool {
	return p.Website != nil
}

func (p *UpdateCampaignReq) IsSetIosDownloadURL() bool {
	return p.IosDownloadURL != nil
}

func (p *UpdateCampaignReq) IsSetAndroidDownloadURL() bool {
	return p.AndroidDownloadURL != nil
}

func (p *UpdateCampaignReq) IsSetAttachmentUrls() bool {
	return p.AttachmentUrls != nil
}

func (p *UpdateCampaignReq) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 4:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 5:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 6:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField6(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 7:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField7(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 8:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField8(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 9:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField9(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 10:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField10(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 11:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField11(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 12:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField12(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 13:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField13(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 14:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField14(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 15:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField15(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 16:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField16(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 17:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField17(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 18:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField18(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 19:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField19(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 20:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField20(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 21:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField21(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 22:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField22(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 23:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField23(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 24:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField24(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 25:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField25(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 26:
			if fieldTypeId == thrift.DOUBLE {
				if err = p.ReadField26(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 27:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField27(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 28:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField28(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 29:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField29(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 30:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField30(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_UpdateCampaignReq[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *UpdateCampaignReq) ReadField1(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CampaignID = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField2(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.CampaignName = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField3(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.PromotionObjective = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField4(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.OptimizationGoal = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField5(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Location = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField6(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Age = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField7(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Gender = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField8(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Languages = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField9(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.SpendingPower = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField10(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.OperatingSystem = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField11(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.OsVersions = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField12(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]int64, 0, size)
	for i := 0; i < size; i++ {

		var _elem int64
		if v, err := iprot.ReadI64(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.DeviceModels = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField13(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.ConnectionType = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField14(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DevicePriceType = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField15(iprot thrift.TProtocol) error {

	var _field *float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DevicePriceMin = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField16(iprot thrift.TProtocol) error {

	var _field *float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DevicePriceMax = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField17(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.PlannedStartTime = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField18(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.PlannedEndTime = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField19(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.TimeZone = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField20(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DaypartingType = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField21(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.DaypartingSchedule = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField22(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.FrequencyCapType = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField23(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.FrequencyCapTimes = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField24(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.FrequencyCapDays = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField25(iprot thrift.TProtocol) error {

	var _field *int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.BudgetType = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField26(iprot thrift.TProtocol) error {

	var _field *float64
	if v, err := iprot.ReadDouble(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.BudgetAmount = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField27(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Website = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField28(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.IosDownloadURL = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField29(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.AndroidDownloadURL = _field
	return nil
}
func (p *UpdateCampaignReq) ReadField30(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]string, 0, size)
	for i := 0; i < size; i++ {

		var _elem string
		if v, err := iprot.ReadString(); err != nil {
			return err
		} else {
			_elem = v
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.AttachmentUrls = _field
	return nil
}

func (p *UpdateCampaignReq) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateCampaignReq"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField6(oprot); err != nil {
			fieldId = 6
			goto WriteFieldError
		}
		if err = p.writeField7(oprot); err != nil {
			fieldId = 7
			goto WriteFieldError
		}
		if err = p.writeField8(oprot); err != nil {
			fieldId = 8
			goto WriteFieldError
		}
		if err = p.writeField9(oprot); err != nil {
			fieldId = 9
			goto WriteFieldError
		}
		if err = p.writeField10(oprot); err != nil {
			fieldId = 10
			goto WriteFieldError
		}
		if err = p.writeField11(oprot); err != nil {
			fieldId = 11
			goto WriteFieldError
		}
		if err = p.writeField12(oprot); err != nil {
			fieldId = 12
			goto WriteFieldError
		}
		if err = p.writeField13(oprot); err != nil {
			fieldId = 13
			goto WriteFieldError
		}
		if err = p.writeField14(oprot); err != nil {
			fieldId = 14
			goto WriteFieldError
		}
		if err = p.writeField15(oprot); err != nil {
			fieldId = 15
			goto WriteFieldError
		}
		if err = p.writeField16(oprot); err != nil {
			fieldId = 16
			goto WriteFieldError
		}
		if err = p.writeField17(oprot); err != nil {
			fieldId = 17
			goto WriteFieldError
		}
		if err = p.writeField18(oprot); err != nil {
			fieldId = 18
			goto WriteFieldError
		}
		if err = p.writeField19(oprot); err != nil {
			fieldId = 19
			goto WriteFieldError
		}
		if err = p.writeField20(oprot); err != nil {
			fieldId = 20
			goto WriteFieldError
		}
		if err = p.writeField21(oprot); err != nil {
			fieldId = 21
			goto WriteFieldError
		}
		if err = p.writeField22(oprot); err != nil {
			fieldId = 22
			goto WriteFieldError
		}
		if err = p.writeField23(oprot); err != nil {
			fieldId = 23
			goto WriteFieldError
		}
		if err = p.writeField24(oprot); err != nil {
			fieldId = 24
			goto WriteFieldError
		}
		if err = p.writeField25(oprot); err != nil {
			fieldId = 25
			goto WriteFieldError
		}
		if err = p.writeField26(oprot); err != nil {
			fieldId = 26
			goto WriteFieldError
		}
		if err = p.writeField27(oprot); err != nil {
			fieldId = 27
			goto WriteFieldError
		}
		if err = p.writeField28(oprot); err != nil {
			fieldId = 28
			goto WriteFieldError
		}
		if err = p.writeField29(oprot); err != nil {
			fieldId = 29
			goto WriteFieldError
		}
		if err = p.writeField30(oprot); err != nil {
			fieldId = 30
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign_id", thrift.STRING, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CampaignID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetCampaignName() {
		if err = oprot.WriteFieldBegin("campaign_name", thrift.STRING, 2); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.CampaignName); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetPromotionObjective() {
		if err = oprot.WriteFieldBegin("promotion_objective", thrift.STRING, 3); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.PromotionObjective); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetOptimizationGoal() {
		if err = oprot.WriteFieldBegin("optimization_goal", thrift.STRING, 4); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.OptimizationGoal); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetLocation() {
		if err = oprot.WriteFieldBegin("location", thrift.LIST, 5); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.Location)); err != nil {
			return err
		}
		for _, v := range p.Location {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetAge() {
		if err = oprot.WriteFieldBegin("age", thrift.I64, 6); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.Age); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField7(oprot thrift.TProtocol) (err error) {
	if p.IsSetGender() {
		if err = oprot.WriteFieldBegin("gender", thrift.I64, 7); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.Gender); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetLanguages() {
		if err = oprot.WriteFieldBegin("languages", thrift.LIST, 8); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.Languages)); err != nil {
			return err
		}
		for _, v := range p.Languages {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetSpendingPower() {
		if err = oprot.WriteFieldBegin("spending_power", thrift.I64, 9); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.SpendingPower); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField10(oprot thrift.TProtocol) (err error) {
	if p.IsSetOperatingSystem() {
		if err = oprot.WriteFieldBegin("operating_system", thrift.I64, 10); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.OperatingSystem); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetOsVersions() {
		if err = oprot.WriteFieldBegin("os_versions", thrift.LIST, 11); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.OsVersions)); err != nil {
			return err
		}
		for _, v := range p.OsVersions {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField12(oprot thrift.TProtocol) (err error) {
	if p.IsSetDeviceModels() {
		if err = oprot.WriteFieldBegin("device_models", thrift.LIST, 12); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.I64, len(p.DeviceModels)); err != nil {
			return err
		}
		for _, v := range p.DeviceModels {
			if err := oprot.WriteI64(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 12 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 12 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField13(oprot thrift.TProtocol) (err error) {
	if p.IsSetConnectionType() {
		if err = oprot.WriteFieldBegin("connection_type", thrift.I64, 13); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.ConnectionType); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 13 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 13 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField14(oprot thrift.TProtocol) (err error) {
	if p.IsSetDevicePriceType() {
		if err = oprot.WriteFieldBegin("device_price_type", thrift.I32, 14); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.DevicePriceType); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 14 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 14 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField15(oprot thrift.TProtocol) (err error) {
	if p.IsSetDevicePriceMin() {
		if err = oprot.WriteFieldBegin("device_price_min", thrift.DOUBLE, 15); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteDouble(*p.DevicePriceMin); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 15 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 15 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField16(oprot thrift.TProtocol) (err error) {
	if p.IsSetDevicePriceMax() {
		if err = oprot.WriteFieldBegin("device_price_max", thrift.DOUBLE, 16); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteDouble(*p.DevicePriceMax); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 16 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 16 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField17(oprot thrift.TProtocol) (err error) {
	if p.IsSetPlannedStartTime() {
		if err = oprot.WriteFieldBegin("planned_start_time", thrift.STRING, 17); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.PlannedStartTime); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 17 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 17 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField18(oprot thrift.TProtocol) (err error) {
	if p.IsSetPlannedEndTime() {
		if err = oprot.WriteFieldBegin("planned_end_time", thrift.STRING, 18); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.PlannedEndTime); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 18 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 18 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField19(oprot thrift.TProtocol) (err error) {
	if p.IsSetTimeZone() {
		if err = oprot.WriteFieldBegin("time_zone", thrift.I64, 19); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.TimeZone); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 19 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 19 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField20(oprot thrift.TProtocol) (err error) {
	if p.IsSetDaypartingType() {
		if err = oprot.WriteFieldBegin("dayparting_type", thrift.I32, 20); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.DaypartingType); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 20 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 20 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField21(oprot thrift.TProtocol) (err error) {
	if p.IsSetDaypartingSchedule() {
		if err = oprot.WriteFieldBegin("dayparting_schedule", thrift.STRING, 21); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.DaypartingSchedule); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 21 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 21 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField22(oprot thrift.TProtocol) (err error) {
	if p.IsSetFrequencyCapType() {
		if err = oprot.WriteFieldBegin("frequency_cap_type", thrift.I32, 22); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.FrequencyCapType); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 22 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 22 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField23(oprot thrift.TProtocol) (err error) {
	if p.IsSetFrequencyCapTimes() {
		if err = oprot.WriteFieldBegin("frequency_cap_times", thrift.I32, 23); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.FrequencyCapTimes); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 23 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 23 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField24(oprot thrift.TProtocol) (err error) {
	if p.IsSetFrequencyCapDays() {
		if err = oprot.WriteFieldBegin("frequency_cap_days", thrift.I32, 24); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.FrequencyCapDays); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 24 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 24 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField25(oprot thrift.TProtocol) (err error) {
	if p.IsSetBudgetType() {
		if err = oprot.WriteFieldBegin("budget_type", thrift.I32, 25); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(*p.BudgetType); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 25 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 25 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField26(oprot thrift.TProtocol) (err error) {
	if p.IsSetBudgetAmount() {
		if err = oprot.WriteFieldBegin("budget_amount", thrift.DOUBLE, 26); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteDouble(*p.BudgetAmount); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 26 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 26 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField27(oprot thrift.TProtocol) (err error) {
	if p.IsSetWebsite() {
		if err = oprot.WriteFieldBegin("website", thrift.STRING, 27); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Website); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 27 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 27 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField28(oprot thrift.TProtocol) (err error) {
	if p.IsSetIosDownloadURL() {
		if err = oprot.WriteFieldBegin("ios_download_url", thrift.STRING, 28); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.IosDownloadURL); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 28 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 28 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField29(oprot thrift.TProtocol) (err error) {
	if p.IsSetAndroidDownloadURL() {
		if err = oprot.WriteFieldBegin("android_download_url", thrift.STRING, 29); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.AndroidDownloadURL); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 29 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 29 end error: ", p), err)
}

func (p *UpdateCampaignReq) writeField30(oprot thrift.TProtocol) (err error) {
	if p.IsSetAttachmentUrls() {
		if err = oprot.WriteFieldBegin("attachment_urls", thrift.LIST, 30); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.STRING, len(p.AttachmentUrls)); err != nil {
			return err
		}
		for _, v := range p.AttachmentUrls {
			if err := oprot.WriteString(v); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 30 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 30 end error: ", p), err)
}

func (p *UpdateCampaignReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateCampaignReq(%+v)", *p)

}

// 更新Campaign响应
type UpdateCampaignResp struct {
	Campaign *CampaignInfo    `thrift:"campaign,1" form:"campaign" json:"campaign" query:"campaign"`
	BaseResp *common.BaseResp `thrift:"base_resp,2" form:"base_resp" json:"base_resp" query:"base_resp"`
}

func NewUpdateCampaignResp() *UpdateCampaignResp {
	return &UpdateCampaignResp{}
}

func (p *UpdateCampaignResp) InitDefault() {
}

var UpdateCampaignResp_Campaign_DEFAULT *CampaignInfo

func (p *UpdateCampaignResp) GetCampaign() (v *CampaignInfo) {
	if !p.IsSetCampaign() {
		return UpdateCampaignResp_Campaign_DEFAULT
	}
	return p.Campaign
}

var UpdateCampaignResp_BaseResp_DEFAULT *common.BaseResp

func (p *UpdateCampaignResp) GetBaseResp() (v *common.BaseResp) {
	if !p.IsSetBaseResp() {
		return UpdateCampaignResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

var fieldIDToName_UpdateCampaignResp = map[int16]string{
	1: "campaign",
	2: "base_resp",
}

func (p *UpdateCampaignResp) IsSetCampaign() bool {
	return p.Campaign != nil
}

func (p *UpdateCampaignResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *UpdateCampaignResp) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_UpdateCampaignResp[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *UpdateCampaignResp) ReadField1(iprot thrift.TProtocol) error {
	_field := NewCampaignInfo()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Campaign = _field
	return nil
}
func (p *UpdateCampaignResp) ReadField2(iprot thrift.TProtocol) error {
	_field := common.NewBaseResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.BaseResp = _field
	return nil
}

func (p *UpdateCampaignResp) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateCampaignResp"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *UpdateCampaignResp) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Campaign.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *UpdateCampaignResp) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("base_resp", thrift.STRUCT, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.BaseResp.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *UpdateCampaignResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateCampaignResp(%+v)", *p)

}

// 暂停/重启Campaign请求
type UpdateCampaignStatusReq struct {
	CampaignID string `thrift:"campaign_id,1" form:"campaign_id" json:"campaign_id"`
	// active, paused
	Status string `thrift:"status,2" form:"status" json:"status"`
}

func NewUpdateCampaignStatusReq() *UpdateCampaignStatusReq {
	return &UpdateCampaignStatusReq{}
}

func (p *UpdateCampaignStatusReq) InitDefault() {
}

func (p *UpdateCampaignStatusReq) GetCampaignID() (v string) {
	return p.CampaignID
}

func (p *UpdateCampaignStatusReq) GetStatus() (v string) {
	return p.Status
}

var fieldIDToName_UpdateCampaignStatusReq = map[int16]string{
	1: "campaign_id",
	2: "status",
}

func (p *UpdateCampaignStatusReq) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_UpdateCampaignStatusReq[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *UpdateCampaignStatusReq) ReadField1(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CampaignID = _field
	return nil
}
func (p *UpdateCampaignStatusReq) ReadField2(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.Status = _field
	return nil
}

func (p *UpdateCampaignStatusReq) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateCampaignStatusReq"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *UpdateCampaignStatusReq) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign_id", thrift.STRING, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CampaignID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *UpdateCampaignStatusReq) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("status", thrift.STRING, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Status); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *UpdateCampaignStatusReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateCampaignStatusReq(%+v)", *p)

}

// 暂停/重启Campaign响应
type UpdateCampaignStatusResp struct {
	BaseResp *common.BaseResp `thrift:"base_resp,1" form:"base_resp" json:"base_resp" query:"base_resp"`
}

func NewUpdateCampaignStatusResp() *UpdateCampaignStatusResp {
	return &UpdateCampaignStatusResp{}
}

func (p *UpdateCampaignStatusResp) InitDefault() {
}

var UpdateCampaignStatusResp_BaseResp_DEFAULT *common.BaseResp

func (p *UpdateCampaignStatusResp) GetBaseResp() (v *common.BaseResp) {
	if !p.IsSetBaseResp() {
		return UpdateCampaignStatusResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

var fieldIDToName_UpdateCampaignStatusResp = map[int16]string{
	1: "base_resp",
}

func (p *UpdateCampaignStatusResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *UpdateCampaignStatusResp) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_UpdateCampaignStatusResp[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *UpdateCampaignStatusResp) ReadField1(iprot thrift.TProtocol) error {
	_field := common.NewBaseResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.BaseResp = _field
	return nil
}

func (p *UpdateCampaignStatusResp) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateCampaignStatusResp"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *UpdateCampaignStatusResp) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("base_resp", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.BaseResp.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *UpdateCampaignStatusResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateCampaignStatusResp(%+v)", *p)

}

// 获取Campaign列表请求
type ListCampaignsReq struct {
	// 搜索关键字
	Keyword *string `thrift:"keyword,1,optional" form:"keyword" json:"keyword,omitempty"`
	// 状态筛选
	Status *string `thrift:"status,2,optional" form:"status" json:"status,omitempty"`
	// 推广目标筛选
	PromotionObjective *string `thrift:"promotion_objective,3,optional" form:"promotion_objective" json:"promotion_objective,omitempty"`
	Page               int32   `thrift:"page,4" form:"page" json:"page"`
	PageSize           int32   `thrift:"page_size,5" form:"page_size" json:"page_size"`
}

func NewListCampaignsReq() *ListCampaignsReq {
	return &ListCampaignsReq{
		Page:     1,
		PageSize: 10,
	}
}

func (p *ListCampaignsReq) InitDefault() {
	p.Page = 1
	p.PageSize = 10
}

var ListCampaignsReq_Keyword_DEFAULT string

func (p *ListCampaignsReq) GetKeyword() (v string) {
	if !p.IsSetKeyword() {
		return ListCampaignsReq_Keyword_DEFAULT
	}
	return *p.Keyword
}

var ListCampaignsReq_Status_DEFAULT string

func (p *ListCampaignsReq) GetStatus() (v string) {
	if !p.IsSetStatus() {
		return ListCampaignsReq_Status_DEFAULT
	}
	return *p.Status
}

var ListCampaignsReq_PromotionObjective_DEFAULT string

func (p *ListCampaignsReq) GetPromotionObjective() (v string) {
	if !p.IsSetPromotionObjective() {
		return ListCampaignsReq_PromotionObjective_DEFAULT
	}
	return *p.PromotionObjective
}

func (p *ListCampaignsReq) GetPage() (v int32) {
	return p.Page
}

func (p *ListCampaignsReq) GetPageSize() (v int32) {
	return p.PageSize
}

var fieldIDToName_ListCampaignsReq = map[int16]string{
	1: "keyword",
	2: "status",
	3: "promotion_objective",
	4: "page",
	5: "page_size",
}

func (p *ListCampaignsReq) IsSetKeyword() bool {
	return p.Keyword != nil
}

func (p *ListCampaignsReq) IsSetStatus() bool {
	return p.Status != nil
}

func (p *ListCampaignsReq) IsSetPromotionObjective() bool {
	return p.PromotionObjective != nil
}

func (p *ListCampaignsReq) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 4:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 5:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_ListCampaignsReq[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *ListCampaignsReq) ReadField1(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Keyword = _field
	return nil
}
func (p *ListCampaignsReq) ReadField2(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Status = _field
	return nil
}
func (p *ListCampaignsReq) ReadField3(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.PromotionObjective = _field
	return nil
}
func (p *ListCampaignsReq) ReadField4(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.Page = _field
	return nil
}
func (p *ListCampaignsReq) ReadField5(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.PageSize = _field
	return nil
}

func (p *ListCampaignsReq) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("ListCampaignsReq"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *ListCampaignsReq) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetKeyword() {
		if err = oprot.WriteFieldBegin("keyword", thrift.STRING, 1); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Keyword); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *ListCampaignsReq) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetStatus() {
		if err = oprot.WriteFieldBegin("status", thrift.STRING, 2); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Status); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *ListCampaignsReq) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetPromotionObjective() {
		if err = oprot.WriteFieldBegin("promotion_objective", thrift.STRING, 3); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.PromotionObjective); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *ListCampaignsReq) writeField4(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("page", thrift.I32, 4); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.Page); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *ListCampaignsReq) writeField5(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("page_size", thrift.I32, 5); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.PageSize); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *ListCampaignsReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ListCampaignsReq(%+v)", *p)

}

// 获取Campaign列表响应
type ListCampaignsResp struct {
	Campaigns []*CampaignInfo  `thrift:"campaigns,1,default,list<CampaignInfo>" form:"campaigns" json:"campaigns" query:"campaigns"`
	PageInfo  *common.PageResp `thrift:"page_info,2" form:"page_info" json:"page_info" query:"page_info"`
	BaseResp  *common.BaseResp `thrift:"base_resp,3" form:"base_resp" json:"base_resp" query:"base_resp"`
}

func NewListCampaignsResp() *ListCampaignsResp {
	return &ListCampaignsResp{}
}

func (p *ListCampaignsResp) InitDefault() {
}

func (p *ListCampaignsResp) GetCampaigns() (v []*CampaignInfo) {
	return p.Campaigns
}

var ListCampaignsResp_PageInfo_DEFAULT *common.PageResp

func (p *ListCampaignsResp) GetPageInfo() (v *common.PageResp) {
	if !p.IsSetPageInfo() {
		return ListCampaignsResp_PageInfo_DEFAULT
	}
	return p.PageInfo
}

var ListCampaignsResp_BaseResp_DEFAULT *common.BaseResp

func (p *ListCampaignsResp) GetBaseResp() (v *common.BaseResp) {
	if !p.IsSetBaseResp() {
		return ListCampaignsResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

var fieldIDToName_ListCampaignsResp = map[int16]string{
	1: "campaigns",
	2: "page_info",
	3: "base_resp",
}

func (p *ListCampaignsResp) IsSetPageInfo() bool {
	return p.PageInfo != nil
}

func (p *ListCampaignsResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *ListCampaignsResp) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_ListCampaignsResp[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *ListCampaignsResp) ReadField1(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]*CampaignInfo, 0, size)
	values := make([]CampaignInfo, size)
	for i := 0; i < size; i++ {
		_elem := &values[i]
		_elem.InitDefault()

		if err := _elem.Read(iprot); err != nil {
			return err
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Campaigns = _field
	return nil
}
func (p *ListCampaignsResp) ReadField2(iprot thrift.TProtocol) error {
	_field := common.NewPageResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.PageInfo = _field
	return nil
}
func (p *ListCampaignsResp) ReadField3(iprot thrift.TProtocol) error {
	_field := common.NewBaseResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.BaseResp = _field
	return nil
}

func (p *ListCampaignsResp) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("ListCampaignsResp"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *ListCampaignsResp) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaigns", thrift.LIST, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Campaigns)); err != nil {
		return err
	}
	for _, v := range p.Campaigns {
		if err := v.Write(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *ListCampaignsResp) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("page_info", thrift.STRUCT, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.PageInfo.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *ListCampaignsResp) writeField3(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("base_resp", thrift.STRUCT, 3); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.BaseResp.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *ListCampaignsResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ListCampaignsResp(%+v)", *p)

}

// 获取Campaign详情请求
type GetCampaignReq struct {
	CampaignID string `thrift:"campaign_id,1" form:"campaign_id" json:"campaign_id"`
}

func NewGetCampaignReq() *GetCampaignReq {
	return &GetCampaignReq{}
}

func (p *GetCampaignReq) InitDefault() {
}

func (p *GetCampaignReq) GetCampaignID() (v string) {
	return p.CampaignID
}

var fieldIDToName_GetCampaignReq = map[int16]string{
	1: "campaign_id",
}

func (p *GetCampaignReq) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_GetCampaignReq[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *GetCampaignReq) ReadField1(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CampaignID = _field
	return nil
}

func (p *GetCampaignReq) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("GetCampaignReq"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *GetCampaignReq) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign_id", thrift.STRING, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CampaignID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *GetCampaignReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetCampaignReq(%+v)", *p)

}

// 获取Campaign详情响应
type GetCampaignResp struct {
	Campaign *CampaignInfo    `thrift:"campaign,1" form:"campaign" json:"campaign" query:"campaign"`
	BaseResp *common.BaseResp `thrift:"base_resp,2" form:"base_resp" json:"base_resp" query:"base_resp"`
}

func NewGetCampaignResp() *GetCampaignResp {
	return &GetCampaignResp{}
}

func (p *GetCampaignResp) InitDefault() {
}

var GetCampaignResp_Campaign_DEFAULT *CampaignInfo

func (p *GetCampaignResp) GetCampaign() (v *CampaignInfo) {
	if !p.IsSetCampaign() {
		return GetCampaignResp_Campaign_DEFAULT
	}
	return p.Campaign
}

var GetCampaignResp_BaseResp_DEFAULT *common.BaseResp

func (p *GetCampaignResp) GetBaseResp() (v *common.BaseResp) {
	if !p.IsSetBaseResp() {
		return GetCampaignResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

var fieldIDToName_GetCampaignResp = map[int16]string{
	1: "campaign",
	2: "base_resp",
}

func (p *GetCampaignResp) IsSetCampaign() bool {
	return p.Campaign != nil
}

func (p *GetCampaignResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *GetCampaignResp) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_GetCampaignResp[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *GetCampaignResp) ReadField1(iprot thrift.TProtocol) error {
	_field := NewCampaignInfo()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Campaign = _field
	return nil
}
func (p *GetCampaignResp) ReadField2(iprot thrift.TProtocol) error {
	_field := common.NewBaseResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.BaseResp = _field
	return nil
}

func (p *GetCampaignResp) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("GetCampaignResp"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *GetCampaignResp) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Campaign.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *GetCampaignResp) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("base_resp", thrift.STRUCT, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.BaseResp.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *GetCampaignResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetCampaignResp(%+v)", *p)

}

// Admin - 获取所有Campaign列表请求
type AdminListCampaignsReq struct {
	Keyword            *string `thrift:"keyword,1,optional" form:"keyword" json:"keyword,omitempty"`
	Status             *string `thrift:"status,2,optional" form:"status" json:"status,omitempty"`
	PromotionObjective *string `thrift:"promotion_objective,3,optional" form:"promotion_objective" json:"promotion_objective,omitempty"`
	// 按用户筛选
	UserID *int64 `thrift:"user_id,4,optional" form:"user_id" json:"user_id,omitempty"`
	// 按团队筛选
	TeamID   *int64 `thrift:"team_id,5,optional" form:"team_id" json:"team_id,omitempty"`
	Page     int32  `thrift:"page,6" form:"page" json:"page"`
	PageSize int32  `thrift:"page_size,7" form:"page_size" json:"page_size"`
}

func NewAdminListCampaignsReq() *AdminListCampaignsReq {
	return &AdminListCampaignsReq{
		Page:     1,
		PageSize: 10,
	}
}

func (p *AdminListCampaignsReq) InitDefault() {
	p.Page = 1
	p.PageSize = 10
}

var AdminListCampaignsReq_Keyword_DEFAULT string

func (p *AdminListCampaignsReq) GetKeyword() (v string) {
	if !p.IsSetKeyword() {
		return AdminListCampaignsReq_Keyword_DEFAULT
	}
	return *p.Keyword
}

var AdminListCampaignsReq_Status_DEFAULT string

func (p *AdminListCampaignsReq) GetStatus() (v string) {
	if !p.IsSetStatus() {
		return AdminListCampaignsReq_Status_DEFAULT
	}
	return *p.Status
}

var AdminListCampaignsReq_PromotionObjective_DEFAULT string

func (p *AdminListCampaignsReq) GetPromotionObjective() (v string) {
	if !p.IsSetPromotionObjective() {
		return AdminListCampaignsReq_PromotionObjective_DEFAULT
	}
	return *p.PromotionObjective
}

var AdminListCampaignsReq_UserID_DEFAULT int64

func (p *AdminListCampaignsReq) GetUserID() (v int64) {
	if !p.IsSetUserID() {
		return AdminListCampaignsReq_UserID_DEFAULT
	}
	return *p.UserID
}

var AdminListCampaignsReq_TeamID_DEFAULT int64

func (p *AdminListCampaignsReq) GetTeamID() (v int64) {
	if !p.IsSetTeamID() {
		return AdminListCampaignsReq_TeamID_DEFAULT
	}
	return *p.TeamID
}

func (p *AdminListCampaignsReq) GetPage() (v int32) {
	return p.Page
}

func (p *AdminListCampaignsReq) GetPageSize() (v int32) {
	return p.PageSize
}

var fieldIDToName_AdminListCampaignsReq = map[int16]string{
	1: "keyword",
	2: "status",
	3: "promotion_objective",
	4: "user_id",
	5: "team_id",
	6: "page",
	7: "page_size",
}

func (p *AdminListCampaignsReq) IsSetKeyword() bool {
	return p.Keyword != nil
}

func (p *AdminListCampaignsReq) IsSetStatus() bool {
	return p.Status != nil
}

func (p *AdminListCampaignsReq) IsSetPromotionObjective() bool {
	return p.PromotionObjective != nil
}

func (p *AdminListCampaignsReq) IsSetUserID() bool {
	return p.UserID != nil
}

func (p *AdminListCampaignsReq) IsSetTeamID() bool {
	return p.TeamID != nil
}

func (p *AdminListCampaignsReq) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 4:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 5:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 6:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField6(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 7:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField7(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_AdminListCampaignsReq[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *AdminListCampaignsReq) ReadField1(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Keyword = _field
	return nil
}
func (p *AdminListCampaignsReq) ReadField2(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.Status = _field
	return nil
}
func (p *AdminListCampaignsReq) ReadField3(iprot thrift.TProtocol) error {

	var _field *string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.PromotionObjective = _field
	return nil
}
func (p *AdminListCampaignsReq) ReadField4(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.UserID = _field
	return nil
}
func (p *AdminListCampaignsReq) ReadField5(iprot thrift.TProtocol) error {

	var _field *int64
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		_field = &v
	}
	p.TeamID = _field
	return nil
}
func (p *AdminListCampaignsReq) ReadField6(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.Page = _field
	return nil
}
func (p *AdminListCampaignsReq) ReadField7(iprot thrift.TProtocol) error {

	var _field int32
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		_field = v
	}
	p.PageSize = _field
	return nil
}

func (p *AdminListCampaignsReq) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("AdminListCampaignsReq"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField6(oprot); err != nil {
			fieldId = 6
			goto WriteFieldError
		}
		if err = p.writeField7(oprot); err != nil {
			fieldId = 7
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *AdminListCampaignsReq) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetKeyword() {
		if err = oprot.WriteFieldBegin("keyword", thrift.STRING, 1); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Keyword); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *AdminListCampaignsReq) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetStatus() {
		if err = oprot.WriteFieldBegin("status", thrift.STRING, 2); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Status); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *AdminListCampaignsReq) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetPromotionObjective() {
		if err = oprot.WriteFieldBegin("promotion_objective", thrift.STRING, 3); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.PromotionObjective); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *AdminListCampaignsReq) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetUserID() {
		if err = oprot.WriteFieldBegin("user_id", thrift.I64, 4); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.UserID); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *AdminListCampaignsReq) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetTeamID() {
		if err = oprot.WriteFieldBegin("team_id", thrift.I64, 5); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI64(*p.TeamID); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *AdminListCampaignsReq) writeField6(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("page", thrift.I32, 6); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.Page); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 end error: ", p), err)
}

func (p *AdminListCampaignsReq) writeField7(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("page_size", thrift.I32, 7); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.PageSize); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 end error: ", p), err)
}

func (p *AdminListCampaignsReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AdminListCampaignsReq(%+v)", *p)

}

// Admin - 获取所有Campaign列表响应
type AdminListCampaignsResp struct {
	Campaigns []*CampaignInfo  `thrift:"campaigns,1,default,list<CampaignInfo>" form:"campaigns" json:"campaigns" query:"campaigns"`
	PageInfo  *common.PageResp `thrift:"page_info,2" form:"page_info" json:"page_info" query:"page_info"`
	BaseResp  *common.BaseResp `thrift:"base_resp,3" form:"base_resp" json:"base_resp" query:"base_resp"`
}

func NewAdminListCampaignsResp() *AdminListCampaignsResp {
	return &AdminListCampaignsResp{}
}

func (p *AdminListCampaignsResp) InitDefault() {
}

func (p *AdminListCampaignsResp) GetCampaigns() (v []*CampaignInfo) {
	return p.Campaigns
}

var AdminListCampaignsResp_PageInfo_DEFAULT *common.PageResp

func (p *AdminListCampaignsResp) GetPageInfo() (v *common.PageResp) {
	if !p.IsSetPageInfo() {
		return AdminListCampaignsResp_PageInfo_DEFAULT
	}
	return p.PageInfo
}

var AdminListCampaignsResp_BaseResp_DEFAULT *common.BaseResp

func (p *AdminListCampaignsResp) GetBaseResp() (v *common.BaseResp) {
	if !p.IsSetBaseResp() {
		return AdminListCampaignsResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

var fieldIDToName_AdminListCampaignsResp = map[int16]string{
	1: "campaigns",
	2: "page_info",
	3: "base_resp",
}

func (p *AdminListCampaignsResp) IsSetPageInfo() bool {
	return p.PageInfo != nil
}

func (p *AdminListCampaignsResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *AdminListCampaignsResp) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_AdminListCampaignsResp[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *AdminListCampaignsResp) ReadField1(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	_field := make([]*CampaignInfo, 0, size)
	values := make([]CampaignInfo, size)
	for i := 0; i < size; i++ {
		_elem := &values[i]
		_elem.InitDefault()

		if err := _elem.Read(iprot); err != nil {
			return err
		}

		_field = append(_field, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	p.Campaigns = _field
	return nil
}
func (p *AdminListCampaignsResp) ReadField2(iprot thrift.TProtocol) error {
	_field := common.NewPageResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.PageInfo = _field
	return nil
}
func (p *AdminListCampaignsResp) ReadField3(iprot thrift.TProtocol) error {
	_field := common.NewBaseResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.BaseResp = _field
	return nil
}

func (p *AdminListCampaignsResp) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("AdminListCampaignsResp"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *AdminListCampaignsResp) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaigns", thrift.LIST, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Campaigns)); err != nil {
		return err
	}
	for _, v := range p.Campaigns {
		if err := v.Write(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *AdminListCampaignsResp) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("page_info", thrift.STRUCT, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.PageInfo.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *AdminListCampaignsResp) writeField3(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("base_resp", thrift.STRUCT, 3); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.BaseResp.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *AdminListCampaignsResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AdminListCampaignsResp(%+v)", *p)

}

// Admin - 更新Campaign状态请求
type AdminUpdateCampaignStatusReq struct {
	CampaignID string `thrift:"campaign_id,1" form:"campaign_id" json:"campaign_id"`
	// active, paused, ended
	Status string `thrift:"status,2" form:"status" json:"status"`
}

func NewAdminUpdateCampaignStatusReq() *AdminUpdateCampaignStatusReq {
	return &AdminUpdateCampaignStatusReq{}
}

func (p *AdminUpdateCampaignStatusReq) InitDefault() {
}

func (p *AdminUpdateCampaignStatusReq) GetCampaignID() (v string) {
	return p.CampaignID
}

func (p *AdminUpdateCampaignStatusReq) GetStatus() (v string) {
	return p.Status
}

var fieldIDToName_AdminUpdateCampaignStatusReq = map[int16]string{
	1: "campaign_id",
	2: "status",
}

func (p *AdminUpdateCampaignStatusReq) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_AdminUpdateCampaignStatusReq[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *AdminUpdateCampaignStatusReq) ReadField1(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.CampaignID = _field
	return nil
}
func (p *AdminUpdateCampaignStatusReq) ReadField2(iprot thrift.TProtocol) error {

	var _field string
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		_field = v
	}
	p.Status = _field
	return nil
}

func (p *AdminUpdateCampaignStatusReq) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("AdminUpdateCampaignStatusReq"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *AdminUpdateCampaignStatusReq) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("campaign_id", thrift.STRING, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CampaignID); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *AdminUpdateCampaignStatusReq) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("status", thrift.STRING, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Status); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *AdminUpdateCampaignStatusReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AdminUpdateCampaignStatusReq(%+v)", *p)

}

// Admin - 更新Campaign状态响应
type AdminUpdateCampaignStatusResp struct {
	BaseResp *common.BaseResp `thrift:"base_resp,1" form:"base_resp" json:"base_resp" query:"base_resp"`
}

func NewAdminUpdateCampaignStatusResp() *AdminUpdateCampaignStatusResp {
	return &AdminUpdateCampaignStatusResp{}
}

func (p *AdminUpdateCampaignStatusResp) InitDefault() {
}

var AdminUpdateCampaignStatusResp_BaseResp_DEFAULT *common.BaseResp

func (p *AdminUpdateCampaignStatusResp) GetBaseResp() (v *common.BaseResp) {
	if !p.IsSetBaseResp() {
		return AdminUpdateCampaignStatusResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

var fieldIDToName_AdminUpdateCampaignStatusResp = map[int16]string{
	1: "base_resp",
}

func (p *AdminUpdateCampaignStatusResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *AdminUpdateCampaignStatusResp) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_AdminUpdateCampaignStatusResp[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *AdminUpdateCampaignStatusResp) ReadField1(iprot thrift.TProtocol) error {
	_field := common.NewBaseResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.BaseResp = _field
	return nil
}

func (p *AdminUpdateCampaignStatusResp) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("AdminUpdateCampaignStatusResp"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *AdminUpdateCampaignStatusResp) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("base_resp", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.BaseResp.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *AdminUpdateCampaignStatusResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AdminUpdateCampaignStatusResp(%+v)", *p)

}

// Campaign服务
type CampaignService interface {
	// 普通用户接口
	CreateCampaign(ctx context.Context, req *CreateCampaignReq) (r *CreateCampaignResp, err error)

	UpdateCampaign(ctx context.Context, req *UpdateCampaignReq) (r *UpdateCampaignResp, err error)

	UpdateCampaignStatus(ctx context.Context, req *UpdateCampaignStatusReq) (r *UpdateCampaignStatusResp, err error)

	ListCampaigns(ctx context.Context, req *ListCampaignsReq) (r *ListCampaignsResp, err error)

	GetCampaign(ctx context.Context, req *GetCampaignReq) (r *GetCampaignResp, err error)
	// 管理员接口
	AdminListCampaigns(ctx context.Context, req *AdminListCampaignsReq) (r *AdminListCampaignsResp, err error)

	AdminUpdateCampaignStatus(ctx context.Context, req *AdminUpdateCampaignStatusReq) (r *AdminUpdateCampaignStatusResp, err error)
}

type CampaignServiceClient struct {
	c thrift.TClient
}

func NewCampaignServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *CampaignServiceClient {
	return &CampaignServiceClient{
		c: thrift.NewTStandardClient(f.GetProtocol(t), f.GetProtocol(t)),
	}
}

func NewCampaignServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *CampaignServiceClient {
	return &CampaignServiceClient{
		c: thrift.NewTStandardClient(iprot, oprot),
	}
}

func NewCampaignServiceClient(c thrift.TClient) *CampaignServiceClient {
	return &CampaignServiceClient{
		c: c,
	}
}

func (p *CampaignServiceClient) Client_() thrift.TClient {
	return p.c
}

func (p *CampaignServiceClient) CreateCampaign(ctx context.Context, req *CreateCampaignReq) (r *CreateCampaignResp, err error) {
	var _args CampaignServiceCreateCampaignArgs
	_args.Req = req
	var _result CampaignServiceCreateCampaignResult
	if err = p.Client_().Call(ctx, "CreateCampaign", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
func (p *CampaignServiceClient) UpdateCampaign(ctx context.Context, req *UpdateCampaignReq) (r *UpdateCampaignResp, err error) {
	var _args CampaignServiceUpdateCampaignArgs
	_args.Req = req
	var _result CampaignServiceUpdateCampaignResult
	if err = p.Client_().Call(ctx, "UpdateCampaign", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
func (p *CampaignServiceClient) UpdateCampaignStatus(ctx context.Context, req *UpdateCampaignStatusReq) (r *UpdateCampaignStatusResp, err error) {
	var _args CampaignServiceUpdateCampaignStatusArgs
	_args.Req = req
	var _result CampaignServiceUpdateCampaignStatusResult
	if err = p.Client_().Call(ctx, "UpdateCampaignStatus", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
func (p *CampaignServiceClient) ListCampaigns(ctx context.Context, req *ListCampaignsReq) (r *ListCampaignsResp, err error) {
	var _args CampaignServiceListCampaignsArgs
	_args.Req = req
	var _result CampaignServiceListCampaignsResult
	if err = p.Client_().Call(ctx, "ListCampaigns", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
func (p *CampaignServiceClient) GetCampaign(ctx context.Context, req *GetCampaignReq) (r *GetCampaignResp, err error) {
	var _args CampaignServiceGetCampaignArgs
	_args.Req = req
	var _result CampaignServiceGetCampaignResult
	if err = p.Client_().Call(ctx, "GetCampaign", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
func (p *CampaignServiceClient) AdminListCampaigns(ctx context.Context, req *AdminListCampaignsReq) (r *AdminListCampaignsResp, err error) {
	var _args CampaignServiceAdminListCampaignsArgs
	_args.Req = req
	var _result CampaignServiceAdminListCampaignsResult
	if err = p.Client_().Call(ctx, "AdminListCampaigns", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
func (p *CampaignServiceClient) AdminUpdateCampaignStatus(ctx context.Context, req *AdminUpdateCampaignStatusReq) (r *AdminUpdateCampaignStatusResp, err error) {
	var _args CampaignServiceAdminUpdateCampaignStatusArgs
	_args.Req = req
	var _result CampaignServiceAdminUpdateCampaignStatusResult
	if err = p.Client_().Call(ctx, "AdminUpdateCampaignStatus", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

type CampaignServiceProcessor struct {
	processorMap map[string]thrift.TProcessorFunction
	handler      CampaignService
}

func (p *CampaignServiceProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
	p.processorMap[key] = processor
}

func (p *CampaignServiceProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
	processor, ok = p.processorMap[key]
	return processor, ok
}

func (p *CampaignServiceProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
	return p.processorMap
}

func NewCampaignServiceProcessor(handler CampaignService) *CampaignServiceProcessor {
	self := &CampaignServiceProcessor{handler: handler, processorMap: make(map[string]thrift.TProcessorFunction)}
	self.AddToProcessorMap("CreateCampaign", &campaignServiceProcessorCreateCampaign{handler: handler})
	self.AddToProcessorMap("UpdateCampaign", &campaignServiceProcessorUpdateCampaign{handler: handler})
	self.AddToProcessorMap("UpdateCampaignStatus", &campaignServiceProcessorUpdateCampaignStatus{handler: handler})
	self.AddToProcessorMap("ListCampaigns", &campaignServiceProcessorListCampaigns{handler: handler})
	self.AddToProcessorMap("GetCampaign", &campaignServiceProcessorGetCampaign{handler: handler})
	self.AddToProcessorMap("AdminListCampaigns", &campaignServiceProcessorAdminListCampaigns{handler: handler})
	self.AddToProcessorMap("AdminUpdateCampaignStatus", &campaignServiceProcessorAdminUpdateCampaignStatus{handler: handler})
	return self
}
func (p *CampaignServiceProcessor) Process(ctx context.Context, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	name, _, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return false, err
	}
	if processor, ok := p.GetProcessorFunction(name); ok {
		return processor.Process(ctx, seqId, iprot, oprot)
	}
	iprot.Skip(thrift.STRUCT)
	iprot.ReadMessageEnd()
	x := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function "+name)
	oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
	x.Write(oprot)
	oprot.WriteMessageEnd()
	oprot.Flush(ctx)
	return false, x
}

type campaignServiceProcessorCreateCampaign struct {
	handler CampaignService
}

func (p *campaignServiceProcessorCreateCampaign) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := CampaignServiceCreateCampaignArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("CreateCampaign", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := CampaignServiceCreateCampaignResult{}
	var retval *CreateCampaignResp
	if retval, err2 = p.handler.CreateCampaign(ctx, args.Req); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing CreateCampaign: "+err2.Error())
		oprot.WriteMessageBegin("CreateCampaign", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("CreateCampaign", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type campaignServiceProcessorUpdateCampaign struct {
	handler CampaignService
}

func (p *campaignServiceProcessorUpdateCampaign) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := CampaignServiceUpdateCampaignArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("UpdateCampaign", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := CampaignServiceUpdateCampaignResult{}
	var retval *UpdateCampaignResp
	if retval, err2 = p.handler.UpdateCampaign(ctx, args.Req); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing UpdateCampaign: "+err2.Error())
		oprot.WriteMessageBegin("UpdateCampaign", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("UpdateCampaign", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type campaignServiceProcessorUpdateCampaignStatus struct {
	handler CampaignService
}

func (p *campaignServiceProcessorUpdateCampaignStatus) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := CampaignServiceUpdateCampaignStatusArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("UpdateCampaignStatus", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := CampaignServiceUpdateCampaignStatusResult{}
	var retval *UpdateCampaignStatusResp
	if retval, err2 = p.handler.UpdateCampaignStatus(ctx, args.Req); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing UpdateCampaignStatus: "+err2.Error())
		oprot.WriteMessageBegin("UpdateCampaignStatus", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("UpdateCampaignStatus", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type campaignServiceProcessorListCampaigns struct {
	handler CampaignService
}

func (p *campaignServiceProcessorListCampaigns) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := CampaignServiceListCampaignsArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("ListCampaigns", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := CampaignServiceListCampaignsResult{}
	var retval *ListCampaignsResp
	if retval, err2 = p.handler.ListCampaigns(ctx, args.Req); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing ListCampaigns: "+err2.Error())
		oprot.WriteMessageBegin("ListCampaigns", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("ListCampaigns", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type campaignServiceProcessorGetCampaign struct {
	handler CampaignService
}

func (p *campaignServiceProcessorGetCampaign) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := CampaignServiceGetCampaignArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("GetCampaign", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := CampaignServiceGetCampaignResult{}
	var retval *GetCampaignResp
	if retval, err2 = p.handler.GetCampaign(ctx, args.Req); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing GetCampaign: "+err2.Error())
		oprot.WriteMessageBegin("GetCampaign", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("GetCampaign", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type campaignServiceProcessorAdminListCampaigns struct {
	handler CampaignService
}

func (p *campaignServiceProcessorAdminListCampaigns) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := CampaignServiceAdminListCampaignsArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("AdminListCampaigns", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := CampaignServiceAdminListCampaignsResult{}
	var retval *AdminListCampaignsResp
	if retval, err2 = p.handler.AdminListCampaigns(ctx, args.Req); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing AdminListCampaigns: "+err2.Error())
		oprot.WriteMessageBegin("AdminListCampaigns", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("AdminListCampaigns", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type campaignServiceProcessorAdminUpdateCampaignStatus struct {
	handler CampaignService
}

func (p *campaignServiceProcessorAdminUpdateCampaignStatus) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := CampaignServiceAdminUpdateCampaignStatusArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("AdminUpdateCampaignStatus", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := CampaignServiceAdminUpdateCampaignStatusResult{}
	var retval *AdminUpdateCampaignStatusResp
	if retval, err2 = p.handler.AdminUpdateCampaignStatus(ctx, args.Req); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing AdminUpdateCampaignStatus: "+err2.Error())
		oprot.WriteMessageBegin("AdminUpdateCampaignStatus", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("AdminUpdateCampaignStatus", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type CampaignServiceCreateCampaignArgs struct {
	Req *CreateCampaignReq `thrift:"req,1"`
}

func NewCampaignServiceCreateCampaignArgs() *CampaignServiceCreateCampaignArgs {
	return &CampaignServiceCreateCampaignArgs{}
}

func (p *CampaignServiceCreateCampaignArgs) InitDefault() {
}

var CampaignServiceCreateCampaignArgs_Req_DEFAULT *CreateCampaignReq

func (p *CampaignServiceCreateCampaignArgs) GetReq() (v *CreateCampaignReq) {
	if !p.IsSetReq() {
		return CampaignServiceCreateCampaignArgs_Req_DEFAULT
	}
	return p.Req
}

var fieldIDToName_CampaignServiceCreateCampaignArgs = map[int16]string{
	1: "req",
}

func (p *CampaignServiceCreateCampaignArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *CampaignServiceCreateCampaignArgs) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceCreateCampaignArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceCreateCampaignArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := NewCreateCampaignReq()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Req = _field
	return nil
}

func (p *CampaignServiceCreateCampaignArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("CreateCampaign_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceCreateCampaignArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("req", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Req.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignServiceCreateCampaignArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceCreateCampaignArgs(%+v)", *p)

}

type CampaignServiceCreateCampaignResult struct {
	Success *CreateCampaignResp `thrift:"success,0,optional"`
}

func NewCampaignServiceCreateCampaignResult() *CampaignServiceCreateCampaignResult {
	return &CampaignServiceCreateCampaignResult{}
}

func (p *CampaignServiceCreateCampaignResult) InitDefault() {
}

var CampaignServiceCreateCampaignResult_Success_DEFAULT *CreateCampaignResp

func (p *CampaignServiceCreateCampaignResult) GetSuccess() (v *CreateCampaignResp) {
	if !p.IsSetSuccess() {
		return CampaignServiceCreateCampaignResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_CampaignServiceCreateCampaignResult = map[int16]string{
	0: "success",
}

func (p *CampaignServiceCreateCampaignResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *CampaignServiceCreateCampaignResult) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceCreateCampaignResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceCreateCampaignResult) ReadField0(iprot thrift.TProtocol) error {
	_field := NewCreateCampaignResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *CampaignServiceCreateCampaignResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("CreateCampaign_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceCreateCampaignResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *CampaignServiceCreateCampaignResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceCreateCampaignResult(%+v)", *p)

}

type CampaignServiceUpdateCampaignArgs struct {
	Req *UpdateCampaignReq `thrift:"req,1"`
}

func NewCampaignServiceUpdateCampaignArgs() *CampaignServiceUpdateCampaignArgs {
	return &CampaignServiceUpdateCampaignArgs{}
}

func (p *CampaignServiceUpdateCampaignArgs) InitDefault() {
}

var CampaignServiceUpdateCampaignArgs_Req_DEFAULT *UpdateCampaignReq

func (p *CampaignServiceUpdateCampaignArgs) GetReq() (v *UpdateCampaignReq) {
	if !p.IsSetReq() {
		return CampaignServiceUpdateCampaignArgs_Req_DEFAULT
	}
	return p.Req
}

var fieldIDToName_CampaignServiceUpdateCampaignArgs = map[int16]string{
	1: "req",
}

func (p *CampaignServiceUpdateCampaignArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *CampaignServiceUpdateCampaignArgs) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceUpdateCampaignArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := NewUpdateCampaignReq()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Req = _field
	return nil
}

func (p *CampaignServiceUpdateCampaignArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateCampaign_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("req", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Req.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceUpdateCampaignArgs(%+v)", *p)

}

type CampaignServiceUpdateCampaignResult struct {
	Success *UpdateCampaignResp `thrift:"success,0,optional"`
}

func NewCampaignServiceUpdateCampaignResult() *CampaignServiceUpdateCampaignResult {
	return &CampaignServiceUpdateCampaignResult{}
}

func (p *CampaignServiceUpdateCampaignResult) InitDefault() {
}

var CampaignServiceUpdateCampaignResult_Success_DEFAULT *UpdateCampaignResp

func (p *CampaignServiceUpdateCampaignResult) GetSuccess() (v *UpdateCampaignResp) {
	if !p.IsSetSuccess() {
		return CampaignServiceUpdateCampaignResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_CampaignServiceUpdateCampaignResult = map[int16]string{
	0: "success",
}

func (p *CampaignServiceUpdateCampaignResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *CampaignServiceUpdateCampaignResult) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceUpdateCampaignResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignResult) ReadField0(iprot thrift.TProtocol) error {
	_field := NewUpdateCampaignResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *CampaignServiceUpdateCampaignResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateCampaign_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceUpdateCampaignResult(%+v)", *p)

}

type CampaignServiceUpdateCampaignStatusArgs struct {
	Req *UpdateCampaignStatusReq `thrift:"req,1"`
}

func NewCampaignServiceUpdateCampaignStatusArgs() *CampaignServiceUpdateCampaignStatusArgs {
	return &CampaignServiceUpdateCampaignStatusArgs{}
}

func (p *CampaignServiceUpdateCampaignStatusArgs) InitDefault() {
}

var CampaignServiceUpdateCampaignStatusArgs_Req_DEFAULT *UpdateCampaignStatusReq

func (p *CampaignServiceUpdateCampaignStatusArgs) GetReq() (v *UpdateCampaignStatusReq) {
	if !p.IsSetReq() {
		return CampaignServiceUpdateCampaignStatusArgs_Req_DEFAULT
	}
	return p.Req
}

var fieldIDToName_CampaignServiceUpdateCampaignStatusArgs = map[int16]string{
	1: "req",
}

func (p *CampaignServiceUpdateCampaignStatusArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *CampaignServiceUpdateCampaignStatusArgs) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceUpdateCampaignStatusArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignStatusArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := NewUpdateCampaignStatusReq()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Req = _field
	return nil
}

func (p *CampaignServiceUpdateCampaignStatusArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateCampaignStatus_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignStatusArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("req", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Req.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignStatusArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceUpdateCampaignStatusArgs(%+v)", *p)

}

type CampaignServiceUpdateCampaignStatusResult struct {
	Success *UpdateCampaignStatusResp `thrift:"success,0,optional"`
}

func NewCampaignServiceUpdateCampaignStatusResult() *CampaignServiceUpdateCampaignStatusResult {
	return &CampaignServiceUpdateCampaignStatusResult{}
}

func (p *CampaignServiceUpdateCampaignStatusResult) InitDefault() {
}

var CampaignServiceUpdateCampaignStatusResult_Success_DEFAULT *UpdateCampaignStatusResp

func (p *CampaignServiceUpdateCampaignStatusResult) GetSuccess() (v *UpdateCampaignStatusResp) {
	if !p.IsSetSuccess() {
		return CampaignServiceUpdateCampaignStatusResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_CampaignServiceUpdateCampaignStatusResult = map[int16]string{
	0: "success",
}

func (p *CampaignServiceUpdateCampaignStatusResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *CampaignServiceUpdateCampaignStatusResult) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceUpdateCampaignStatusResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignStatusResult) ReadField0(iprot thrift.TProtocol) error {
	_field := NewUpdateCampaignStatusResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *CampaignServiceUpdateCampaignStatusResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateCampaignStatus_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignStatusResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *CampaignServiceUpdateCampaignStatusResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceUpdateCampaignStatusResult(%+v)", *p)

}

type CampaignServiceListCampaignsArgs struct {
	Req *ListCampaignsReq `thrift:"req,1"`
}

func NewCampaignServiceListCampaignsArgs() *CampaignServiceListCampaignsArgs {
	return &CampaignServiceListCampaignsArgs{}
}

func (p *CampaignServiceListCampaignsArgs) InitDefault() {
}

var CampaignServiceListCampaignsArgs_Req_DEFAULT *ListCampaignsReq

func (p *CampaignServiceListCampaignsArgs) GetReq() (v *ListCampaignsReq) {
	if !p.IsSetReq() {
		return CampaignServiceListCampaignsArgs_Req_DEFAULT
	}
	return p.Req
}

var fieldIDToName_CampaignServiceListCampaignsArgs = map[int16]string{
	1: "req",
}

func (p *CampaignServiceListCampaignsArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *CampaignServiceListCampaignsArgs) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceListCampaignsArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceListCampaignsArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := NewListCampaignsReq()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Req = _field
	return nil
}

func (p *CampaignServiceListCampaignsArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("ListCampaigns_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceListCampaignsArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("req", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Req.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignServiceListCampaignsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceListCampaignsArgs(%+v)", *p)

}

type CampaignServiceListCampaignsResult struct {
	Success *ListCampaignsResp `thrift:"success,0,optional"`
}

func NewCampaignServiceListCampaignsResult() *CampaignServiceListCampaignsResult {
	return &CampaignServiceListCampaignsResult{}
}

func (p *CampaignServiceListCampaignsResult) InitDefault() {
}

var CampaignServiceListCampaignsResult_Success_DEFAULT *ListCampaignsResp

func (p *CampaignServiceListCampaignsResult) GetSuccess() (v *ListCampaignsResp) {
	if !p.IsSetSuccess() {
		return CampaignServiceListCampaignsResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_CampaignServiceListCampaignsResult = map[int16]string{
	0: "success",
}

func (p *CampaignServiceListCampaignsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *CampaignServiceListCampaignsResult) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceListCampaignsResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceListCampaignsResult) ReadField0(iprot thrift.TProtocol) error {
	_field := NewListCampaignsResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *CampaignServiceListCampaignsResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("ListCampaigns_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceListCampaignsResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *CampaignServiceListCampaignsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceListCampaignsResult(%+v)", *p)

}

type CampaignServiceGetCampaignArgs struct {
	Req *GetCampaignReq `thrift:"req,1"`
}

func NewCampaignServiceGetCampaignArgs() *CampaignServiceGetCampaignArgs {
	return &CampaignServiceGetCampaignArgs{}
}

func (p *CampaignServiceGetCampaignArgs) InitDefault() {
}

var CampaignServiceGetCampaignArgs_Req_DEFAULT *GetCampaignReq

func (p *CampaignServiceGetCampaignArgs) GetReq() (v *GetCampaignReq) {
	if !p.IsSetReq() {
		return CampaignServiceGetCampaignArgs_Req_DEFAULT
	}
	return p.Req
}

var fieldIDToName_CampaignServiceGetCampaignArgs = map[int16]string{
	1: "req",
}

func (p *CampaignServiceGetCampaignArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *CampaignServiceGetCampaignArgs) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceGetCampaignArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceGetCampaignArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := NewGetCampaignReq()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Req = _field
	return nil
}

func (p *CampaignServiceGetCampaignArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("GetCampaign_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceGetCampaignArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("req", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Req.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignServiceGetCampaignArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceGetCampaignArgs(%+v)", *p)

}

type CampaignServiceGetCampaignResult struct {
	Success *GetCampaignResp `thrift:"success,0,optional"`
}

func NewCampaignServiceGetCampaignResult() *CampaignServiceGetCampaignResult {
	return &CampaignServiceGetCampaignResult{}
}

func (p *CampaignServiceGetCampaignResult) InitDefault() {
}

var CampaignServiceGetCampaignResult_Success_DEFAULT *GetCampaignResp

func (p *CampaignServiceGetCampaignResult) GetSuccess() (v *GetCampaignResp) {
	if !p.IsSetSuccess() {
		return CampaignServiceGetCampaignResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_CampaignServiceGetCampaignResult = map[int16]string{
	0: "success",
}

func (p *CampaignServiceGetCampaignResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *CampaignServiceGetCampaignResult) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceGetCampaignResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceGetCampaignResult) ReadField0(iprot thrift.TProtocol) error {
	_field := NewGetCampaignResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *CampaignServiceGetCampaignResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("GetCampaign_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceGetCampaignResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *CampaignServiceGetCampaignResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceGetCampaignResult(%+v)", *p)

}

type CampaignServiceAdminListCampaignsArgs struct {
	Req *AdminListCampaignsReq `thrift:"req,1"`
}

func NewCampaignServiceAdminListCampaignsArgs() *CampaignServiceAdminListCampaignsArgs {
	return &CampaignServiceAdminListCampaignsArgs{}
}

func (p *CampaignServiceAdminListCampaignsArgs) InitDefault() {
}

var CampaignServiceAdminListCampaignsArgs_Req_DEFAULT *AdminListCampaignsReq

func (p *CampaignServiceAdminListCampaignsArgs) GetReq() (v *AdminListCampaignsReq) {
	if !p.IsSetReq() {
		return CampaignServiceAdminListCampaignsArgs_Req_DEFAULT
	}
	return p.Req
}

var fieldIDToName_CampaignServiceAdminListCampaignsArgs = map[int16]string{
	1: "req",
}

func (p *CampaignServiceAdminListCampaignsArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *CampaignServiceAdminListCampaignsArgs) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceAdminListCampaignsArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceAdminListCampaignsArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := NewAdminListCampaignsReq()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Req = _field
	return nil
}

func (p *CampaignServiceAdminListCampaignsArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("AdminListCampaigns_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceAdminListCampaignsArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("req", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Req.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignServiceAdminListCampaignsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceAdminListCampaignsArgs(%+v)", *p)

}

type CampaignServiceAdminListCampaignsResult struct {
	Success *AdminListCampaignsResp `thrift:"success,0,optional"`
}

func NewCampaignServiceAdminListCampaignsResult() *CampaignServiceAdminListCampaignsResult {
	return &CampaignServiceAdminListCampaignsResult{}
}

func (p *CampaignServiceAdminListCampaignsResult) InitDefault() {
}

var CampaignServiceAdminListCampaignsResult_Success_DEFAULT *AdminListCampaignsResp

func (p *CampaignServiceAdminListCampaignsResult) GetSuccess() (v *AdminListCampaignsResp) {
	if !p.IsSetSuccess() {
		return CampaignServiceAdminListCampaignsResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_CampaignServiceAdminListCampaignsResult = map[int16]string{
	0: "success",
}

func (p *CampaignServiceAdminListCampaignsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *CampaignServiceAdminListCampaignsResult) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceAdminListCampaignsResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceAdminListCampaignsResult) ReadField0(iprot thrift.TProtocol) error {
	_field := NewAdminListCampaignsResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *CampaignServiceAdminListCampaignsResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("AdminListCampaigns_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceAdminListCampaignsResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *CampaignServiceAdminListCampaignsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceAdminListCampaignsResult(%+v)", *p)

}

type CampaignServiceAdminUpdateCampaignStatusArgs struct {
	Req *AdminUpdateCampaignStatusReq `thrift:"req,1"`
}

func NewCampaignServiceAdminUpdateCampaignStatusArgs() *CampaignServiceAdminUpdateCampaignStatusArgs {
	return &CampaignServiceAdminUpdateCampaignStatusArgs{}
}

func (p *CampaignServiceAdminUpdateCampaignStatusArgs) InitDefault() {
}

var CampaignServiceAdminUpdateCampaignStatusArgs_Req_DEFAULT *AdminUpdateCampaignStatusReq

func (p *CampaignServiceAdminUpdateCampaignStatusArgs) GetReq() (v *AdminUpdateCampaignStatusReq) {
	if !p.IsSetReq() {
		return CampaignServiceAdminUpdateCampaignStatusArgs_Req_DEFAULT
	}
	return p.Req
}

var fieldIDToName_CampaignServiceAdminUpdateCampaignStatusArgs = map[int16]string{
	1: "req",
}

func (p *CampaignServiceAdminUpdateCampaignStatusArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *CampaignServiceAdminUpdateCampaignStatusArgs) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceAdminUpdateCampaignStatusArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceAdminUpdateCampaignStatusArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := NewAdminUpdateCampaignStatusReq()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Req = _field
	return nil
}

func (p *CampaignServiceAdminUpdateCampaignStatusArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("AdminUpdateCampaignStatus_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceAdminUpdateCampaignStatusArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("req", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Req.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CampaignServiceAdminUpdateCampaignStatusArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceAdminUpdateCampaignStatusArgs(%+v)", *p)

}

type CampaignServiceAdminUpdateCampaignStatusResult struct {
	Success *AdminUpdateCampaignStatusResp `thrift:"success,0,optional"`
}

func NewCampaignServiceAdminUpdateCampaignStatusResult() *CampaignServiceAdminUpdateCampaignStatusResult {
	return &CampaignServiceAdminUpdateCampaignStatusResult{}
}

func (p *CampaignServiceAdminUpdateCampaignStatusResult) InitDefault() {
}

var CampaignServiceAdminUpdateCampaignStatusResult_Success_DEFAULT *AdminUpdateCampaignStatusResp

func (p *CampaignServiceAdminUpdateCampaignStatusResult) GetSuccess() (v *AdminUpdateCampaignStatusResp) {
	if !p.IsSetSuccess() {
		return CampaignServiceAdminUpdateCampaignStatusResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_CampaignServiceAdminUpdateCampaignStatusResult = map[int16]string{
	0: "success",
}

func (p *CampaignServiceAdminUpdateCampaignStatusResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *CampaignServiceAdminUpdateCampaignStatusResult) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CampaignServiceAdminUpdateCampaignStatusResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CampaignServiceAdminUpdateCampaignStatusResult) ReadField0(iprot thrift.TProtocol) error {
	_field := NewAdminUpdateCampaignStatusResp()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *CampaignServiceAdminUpdateCampaignStatusResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("AdminUpdateCampaignStatus_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CampaignServiceAdminUpdateCampaignStatusResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *CampaignServiceAdminUpdateCampaignStatusResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CampaignServiceAdminUpdateCampaignStatusResult(%+v)", *p)

}
