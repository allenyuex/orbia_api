// Code generated by hertz generator.
// 重要：本文件由 hz 工具生成，但已手动调整
// 更新 IDL 后使用: hz update -idl idl/api.thrift

package api

import (
	"context"
	"log"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"

	api "orbia_api/biz/model/api"
	"orbia_api/biz/service"
	"orbia_api/biz/utils"
)

var (
	userService = service.NewUserService()
)

// Hello .
// @router /api/v1/demo/hello [GET]
func Hello(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.HelloReq
	err = c.BindAndValidate(&req)
	if err != nil {
		utils.ParamError(c, err.Error())
		return
	}

	// 调用 service 层
	resp, err := userService.Hello(&req)
	if err != nil {
		log.Printf("Hello service error: %v", err)
		utils.SystemError(c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// CreateUser .
// @router /api/v1/users [POST]
func CreateUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CreateUserReq
	err = c.BindAndValidate(&req)
	if err != nil {
		utils.ParamError(c, err.Error())
		return
	}

	// 调用 service 层
	resp, err := userService.CreateUser(&req)
	if err != nil {
		log.Printf("CreateUser service error: %v", err)
		utils.SystemError(c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// GetUser .
// @router /api/v1/users/:user_id [GET]
func GetUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.GetUserReq
	err = c.BindAndValidate(&req)
	if err != nil {
		utils.ParamError(c, err.Error())
		return
	}

	// 调用 service 层
	resp, err := userService.GetUser(&req)
	if err != nil {
		log.Printf("GetUser service error: %v", err)
		utils.SystemError(c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// ListUsers .
// @router /api/v1/users [GET]
func ListUsers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.ListUsersReq
	err = c.BindAndValidate(&req)
	if err != nil {
		utils.ParamError(c, err.Error())
		return
	}

	// 调用 service 层
	resp, err := userService.ListUsers(&req)
	if err != nil {
		log.Printf("ListUsers service error: %v", err)
		utils.SystemError(c)
		return
	}

	c.JSON(consts.StatusOK, resp)
}
